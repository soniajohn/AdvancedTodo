{"ast":null,"code":"var _jsxFileName = \"/home/sonia/projects/AdvancedTodo/client/src/components/ChildList.js\",\n    _s = $RefreshSig$();\n\nimport react from 'react';\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useContext } from 'react';\nimport { ListContext } from '../context/ListContext.js';\nimport Axios from 'axios';\nimport { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChildList = () => {\n  _s();\n\n  const [task, setTasks] = useState(\"\");\n  const [items, setItems] = useState([]);\n  const [toggleBtn, setToggleBtn] = useState(true);\n  const [isEditItem, setIsEditItem] = useState(null);\n  const {\n    optionname,\n    setOptionname\n  } = useContext(ListContext);\n  const [validatevalue, setValidatevalue] = useState(\"\");\n  const [tskList, settskList] = useState([]);\n  const [showallCheck, setShowallCheck] = useState(\"\");\n  const {\n    username,\n    SetUsername,\n    userid,\n    SetUserid\n  } = useContext(ListContext);\n  const [fetchid, setFetchid] = useState([]);\n  let history = useHistory();\n\n  function passData(val) {\n    if (val.length > 0) {\n      var name = val[0].toUpperCase() + val.slice(1);\n    }\n\n    setTasks(name);\n    return val.length < 15 ? '' : setValidatevalue(\"max char 15\");\n  }\n\n  const deleteItem = (id, task_del) => {\n    const updatedItems = items.filter((elm, ind) => {\n      return ind !== id;\n    });\n    deleteTask(task_del);\n    setItems(updatedItems);\n  };\n\n  const deleteTask = task_del => {\n    Axios.delete(`http://localhost:4000/childdelete/${task_del}`);\n  };\n\n  const updateTask = (tasname, txt) => {\n    Axios.put(\"http://localhost:4000/childedit\", {\n      tasname: tasname,\n      original_txt: txt\n    }).then(response => {\n      alert(\"update\");\n    });\n  };\n\n  const addItem = () => {\n    if (!task) {} else if (task && !toggleBtn) {\n      setItems(items.map(elem => {\n        if (elem.childtodo_id === isEditItem) {\n          setToggleBtn(true);\n          setTasks(\" \");\n          updateTask(task, elem.childtask_name);\n          return { ...elem,\n            childtask_name: task\n          };\n        }\n\n        return elem;\n      }));\n    } else {\n      setItems([{\n        id: Date.now(),\n        childtask_name: task,\n        child_status: false\n      }, ...items]);\n      setTasks(\"\");\n    }\n  };\n\n  const inputRef = useRef();\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const submitTask = () => {\n    if (task) {\n      Axios.post(\"http://localhost:4000/childinsert\", {\n        task: task,\n        text: optionname,\n        Taskid: fetchid\n      }).then(() => {\n        alert(\"successful insert\");\n      });\n      addItem();\n    }\n  };\n\n  const editItem = id => {\n    let newEditItem = items.find(elem => {\n      return elem.childtodo_id === id;\n    });\n    setToggleBtn(false);\n    setTasks(newEditItem.childtask_name);\n    setIsEditItem(id);\n  };\n\n  useEffect(() => {\n    Axios.get(`http://localhost:4000/fetchTaskid/${optionname}`, {}).then(response => {\n      var taskid = response.data[0].Taskid;\n      setFetchid(taskid);\n      Axios.get(`http://localhost:4000/fetchdisplay/${taskid}`, {}).then(response => {\n        setItems(response.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    }).catch(err => {\n      console.log(err);\n    }); // SetUsername( response.data[0].user)\n  }, []);\n\n  const getTask = e => {\n    Axios.get(`http://localhost:4000/showselected/${fetchid}`, {}).then(response => settskList(response.data));\n    setShowallCheck(e.target.checked);\n  };\n\n  const updateTaskStatus = (txt, status) => {\n    // alert(\"update\"+txt)\n    Axios.put(\"http://localhost:4000/Childupdate\", {\n      status: status,\n      txtupdate: txt\n    }).then(response => {\n      alert(\"update\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(react.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"parent_div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"secondcontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"x\",\n            class: \"closebtn\",\n            onClick: () => {\n              history.push(\"/\");\n            },\n            children: \" X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"heading\",\n            children: [\" \", optionname]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 27\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 72\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"thirdcontainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              class: \"todonametxt\",\n              ref: inputRef,\n              title: validatevalue,\n              value: task,\n              autoComplete: \"off\",\n              maxLength: \"20\",\n              onChange: e => passData(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 27\n            }, this), \"\\xA0\\xA0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"imgbutton\",\n            children: toggleBtn ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: submitTask,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                class: \"plusimage\",\n                title: \"\",\n                src: \"/image/plus.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 70\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addItem,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                class: \"plusimage\",\n                title: \"edit\",\n                src: \"https://img.icons8.com/color/48/000000/edit-property.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 166\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 140\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 27\n          }, this), items.map((elm, ind) => {\n            if (elm.child_status === false) {\n              alert(\"zero\");\n            }\n\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"hhh\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                name: \"taskname\",\n                onChange: e => {\n                  //  alert(\"elmout\"+elm.childtodo_id)\n                  setItems(items.filter(obj2 => {\n                    //alert(\"inobjtaskid\"+obj2.childtodo_id)\n                    //  alert(\"inelmtaskid\"+elm.childtodo_id)\n                    alert(\"hello\");\n\n                    if (obj2.childtodo_id === elm.childtodo_id) {\n                      obj2.child_status = e.target.checked; //alert(\"in child\"+obj2.child_status)\n\n                      updateTaskStatus(obj2.childtask_name, obj2.child_status);\n                    }\n\n                    return obj2;\n                  }));\n                },\n                value: elm.childtask_name,\n                checked: alert(\"one\" + elm.child_status),\n                class: \"optionbtn\",\n                name: \"option\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  textDecoration: elm.child_status ? \"line-through\" : \"none\"\n                },\n                name: \"text\",\n                children: elm.childtask_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                title: \"edit item\",\n                class: \"editimg\",\n                src: \"https://img.icons8.com/color/48/000000/edit-property.png\",\n                onClick: () => editItem(elm.childtodo_id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fa fa-trash\",\n                title: \"delete Item\",\n                onClick: () => deleteItem(ind, elm.childtask_name)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 10\n              }, this)]\n            }, ind, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"third_div\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            class: \"\",\n            value: \"0\",\n            name: \"\",\n            checked: showallCheck,\n            onChange: getTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"showcomplete_txt\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"completed Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 2\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 1\n          }, this), tskList.map((val, key) => {\n            if (showallCheck === true) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"showcheck\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Task Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 14\n                }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: val.childtask_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"\\xA0\\xA0Created Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 14\n                }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: val.child_date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 60\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 14\n              }, this);\n            } else {\n              return null;\n            }\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"newbtn\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            class: \"newbtn\",\n            value: \" +   Cancel\",\n            onClick: () => history.push(\"/\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChildList, \"qOM0M87vwjIzBC8wXHUKt/usTa8=\", false, function () {\n  return [useHistory];\n});\n\n_c = ChildList;\nexport default ChildList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChildList\");","map":{"version":3,"sources":["/home/sonia/projects/AdvancedTodo/client/src/components/ChildList.js"],"names":["react","React","useState","useHistory","useContext","ListContext","Axios","useRef","useEffect","ChildList","task","setTasks","items","setItems","toggleBtn","setToggleBtn","isEditItem","setIsEditItem","optionname","setOptionname","validatevalue","setValidatevalue","tskList","settskList","showallCheck","setShowallCheck","username","SetUsername","userid","SetUserid","fetchid","setFetchid","history","passData","val","length","name","toUpperCase","slice","deleteItem","id","task_del","updatedItems","filter","elm","ind","deleteTask","delete","updateTask","tasname","txt","put","original_txt","then","response","alert","addItem","map","elem","childtodo_id","childtask_name","Date","now","child_status","inputRef","current","focus","submitTask","post","text","Taskid","editItem","newEditItem","find","get","taskid","data","catch","err","console","log","getTask","e","target","checked","updateTaskStatus","status","txtupdate","push","value","obj2","textDecoration","key","child_date"],"mappings":"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","sourcesContent":["import react from 'react';\nimport React, { useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport{useContext} from 'react';\nimport {ListContext} from '../context/ListContext.js'\nimport Axios from 'axios';\nimport  { useRef, useEffect } from 'react';\n\n\nconst ChildList=()=>{\n\n    const [task,setTasks] = useState(\"\");\n    const [items,setItems]=useState([]);\n    \n    const[toggleBtn,setToggleBtn]=useState(true);\n    const[isEditItem,setIsEditItem]=useState(null);\n    \n    const{optionname,setOptionname}=useContext(ListContext)\n    const[validatevalue,setValidatevalue]=useState(\"\")\n    const[tskList,settskList]=useState([])\n    const[showallCheck,setShowallCheck]=useState(\"\")\n    const{username,SetUsername,userid,SetUserid}=useContext(ListContext);\n    const[fetchid,setFetchid]=useState([])\n  \n    let history=useHistory();\n\n    \n   \n\n  function passData(val)\n  {\n  \n    if(val.length>0)\n      {\n         var name= val[0].toUpperCase()+val.slice(1)\n\n      }\n\n      setTasks(name);\n\n\n     return val.length<15 ?'':setValidatevalue(\"max char 15\");\n\n     }\n\n\n\n     const deleteItem=(id,task_del)=>{\n      const updatedItems=items.filter((elm,ind)=>{\n        \n             return ind!==id;\n       \n                     } ) ;\n             deleteTask(task_del);\n             setItems(updatedItems);\n\n             } \n\n\n\n        const deleteTask=(task_del)=>{\n\n          Axios.delete(`http://localhost:4000/childdelete/${task_del}`);\n      \n             };\n\n\n\n         \n          const updateTask=(tasname,txt)=>{\n            \n                       \n          Axios.put(\"http://localhost:4000/childedit\",\n              {\n                tasname:tasname,original_txt:txt\n              \n              }).then((response)=>\n            \n             { alert(\"update\");\n          \n             }\n              \n             );\n            \n            \n             }\n\n\n\n\n\n\n  const addItem=()=>{\n    if(!task){\n    }else if(task && !toggleBtn){\n\n      setItems(\n        items.map((elem)=>{\n          if(elem.childtodo_id===isEditItem){\n             setToggleBtn(true)\n          \n              setTasks(\" \")\n            \n            \n              updateTask(task,elem.childtask_name)\n              return{...elem,childtask_name:task}\n            \n                           }\n             return elem;\n            })\n      \n      )\n    } else{\n    setItems([{id:Date.now(),childtask_name:task,child_status:false},...items]);\n\n    setTasks(\"\")\n   \n   } }\n\n\n\n const inputRef = useRef();\n useEffect(() => {\n  inputRef.current.focus();\n\n                  })\n\n\n\n\n const submitTask=()=>{\n        \n        \n  if(task){\n      Axios.post(\"http://localhost:4000/childinsert\",{\n      task:task,\n      text:optionname,\n      Taskid:fetchid\n      \n           \n   }).then(()=>{\n       alert(\"successful insert\")});\n       addItem();\n      \n             }\n       \n      \n                        };  \n\n\n \n   const editItem=(id)=>{\n  \n    let newEditItem=items.find((elem)=>{\n    \n    \n    return elem.childtodo_id===id\n\n             });\n   setToggleBtn(false);\n   setTasks(newEditItem.childtask_name)\n   setIsEditItem(id)\n\n\n         }\n\n\n\nuseEffect(() => {\n     \n  Axios.get(`http://localhost:4000/fetchTaskid/${optionname}`,\n\n  {\n  \n  }).then(response=>{\n   \n     \n     var taskid=response.data[0].Taskid\n    \n     setFetchid(taskid)\n\n         \n     Axios.get(`http://localhost:4000/fetchdisplay/${taskid}`,\n     { \n        \n     }).then(response=>{\n         \n          \n    setItems(response.data)\n   \n      \n    \n     \n       })\n        .catch(err=>{\n          console.log(err)\n        \n        })\n   \n\n \n  })\n  .catch(err=>{\n    console.log(err)\n  \n               })\n// SetUsername( response.data[0].user)\n  \n}, []);\n\n\n\n\n\n\n    const getTask=(e)=>{\n      \n\n      Axios.get(`http://localhost:4000/showselected/${fetchid}`,{\n        \n\n      }).then((response)=>\n      settskList(response.data)\n     \n        )  \n\n        setShowallCheck(e.target.checked)\n                       }\n\n\n\nconst updateTaskStatus=(txt,status)=>{\n    // alert(\"update\"+txt)\n     \nAxios.put(\"http://localhost:4000/Childupdate\",\n   { status:status,txtupdate:txt}).then((response)=>\n  \n   { alert(\"update\");\n\n   }\n    \n   );\n   \n  }\n\n\n\n\n\n    return(\n\n        <react.Fragment>\n          \n          <div class=\"parent_div\">\n                   <div class=\"container\">\n                \n                     \n                          <div class=\"secondcontainer\">\n                          <button id = \"x\" class=\"closebtn\"  onClick={()=>{history.push( \"/\")}}> X</button>\n                   \n                          <label class=\"heading\"> {optionname}</label> <br></br> \n                          \n                        <span class=\"thirdcontainer\">\n                          <input type=\"text\" class=\"todonametxt\" ref={inputRef}  title={validatevalue}   value={task}autoComplete=\"off\" maxLength=\"20\" onChange={(e)=>passData(e.target.value)}></input>&nbsp;&nbsp;\n                          </span>\n                          <span class=\"imgbutton\">\n                            {\n\n                              toggleBtn?<button onClick={submitTask}><img class=\"plusimage\" title=\"\" src=\"/image/plus.png\"></img></button>:<button onClick={addItem}><img class=\"plusimage\" title=\"edit\" src=\"https://img.icons8.com/color/48/000000/edit-property.png\"></img></button>\n                            }\n                            </span>\n                      \n                          { \n    \n    items.map((elm,ind)=>{\n   \n     if (elm.child_status===false)\n      {\n        alert(\"zero\")\n     }\n        return(\n          \n         \n                <div class=\"hhh\" key={ind}>\n                  \n\n                <input type=\"checkbox\"  name=\"taskname\"   onChange={(e)=>{\n                //  alert(\"elmout\"+elm.childtodo_id)\n                \n                 setItems(items.filter(obj2=>{\n//alert(\"inobjtaskid\"+obj2.childtodo_id)\n                 //  alert(\"inelmtaskid\"+elm.childtodo_id)\n          alert(\"hello\")\n                  if(obj2.childtodo_id===elm.childtodo_id){\n                    \n                   obj2.child_status=e.target.checked\n\n  //alert(\"in child\"+obj2.child_status)\n            \n               \n               updateTaskStatus(obj2.childtask_name,obj2.child_status)\n                  \n                         \n                  }\n                  return obj2\n               \n                 \n                 })\n                 )}\n                 \n            \n                 \n               \n                 } value={elm.childtask_name} checked={alert(\"one\"+elm.child_status)} class=\"optionbtn\" name=\"option\"\n                \n                 />\n                 \n                            \n                \n \n         <label style={{textDecoration:elm.child_status?\"line-through\":\"none\"} }  name=\"text\">{elm.childtask_name}</label>\n         <img title=\"edit item\" class=\"editimg\" src=\"https://img.icons8.com/color/48/000000/edit-property.png\" onClick={()=>editItem(elm.childtodo_id)}/>\n         <i class=\"fa fa-trash\" title=\"delete Item\" onClick={()=>deleteItem(ind,elm.childtask_name)}></i>\n\n          \n              </div>\n            \n            \n             ) \n            \n            }\n            \n            \n            \n\n                \n            )\n                       \n}\n\n\n\n\n\n                          </div>\n                          <div class=\"third_div\">\n\n                          <input type=\"checkbox\" class=\"\" value=\"0\" name=\"\" checked={showallCheck}  onChange={getTask}\n\n/>\n\n\n\n\n<span class=\"showcomplete_txt\" >\n     \n <label >completed Task</label></span>\n {\n     \n     tskList.map((val,key)=>{\n         \n     if(showallCheck===true){\n        \n         return (\n             <div class=\"showcheck\">        \n             <h4>Task Name:</h4>&nbsp;&nbsp;<h5>{val.childtask_name}</h5>\n             <h4>&nbsp;&nbsp;Created Date:</h4>&nbsp;&nbsp;<h5>{val.child_date}</h5>\n             </div>\n             \n                 )\n             }\n                 else {\n \n                     return null\n                 }\n                                  }\n                      )\n }  \n\n\n\n\n\n</div>\n                      \n      \n\n \n                  <span class=\"newbtn\"><input type=\"button\"  class=\"newbtn\" value= \" +   Cancel\"  onClick={()=>history.push(\"/\")} /></span> \n                  \n      \n </div>\n </div>\n     \n            \n        \n          \n          </react.Fragment>\n          \n            \n          \n          )\n\n}\nexport default ChildList;"]},"metadata":{},"sourceType":"module"}