{"ast":null,"code":"var _jsxFileName = \"/home/sonia/projects/AdvancedToDo/client/src/components/TaskList.js\",\n    _s = $RefreshSig$();\n\nimport react from 'react';\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useContext } from 'react';\nimport { ListContext } from '../context/ListContext.js';\nimport { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tasklist = () => {\n  _s();\n\n  const {\n    optionname,\n    setOptionname\n  } = useContext(ListContext);\n  const [task, setTasks] = useState(\"\");\n  const [items, setItems] = useState([]);\n  const [toggleBtn, setToggleBtn] = useState(true);\n  const [isEditItem, setIsEditItem] = useState(null);\n  const [optStatus, setOptStatus] = useState(false);\n  const [taskValue, setTaskvalue] = useState(\"\");\n  const [validatevalue, setValidatevalue] = useState(\"\");\n  let history = useHistory();\n\n  function passData(val) {\n    setTasks(val);\n    return val.length < 20 ? '' : setValidatevalue(\"max char20\");\n  }\n\n  const inputRef = useRef();\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const deleteItem = (id, task_del) => {\n    const updatedItems = items.filter((elm, ind) => {\n      return ind !== id;\n    }); //deleteTask(task_del);\n\n    setItems(updatedItems);\n  };\n\n  const addItem = () => {\n    if (!task) {} else if (task && !toggleBtn) {\n      setItems(items.map(elem => {\n        if (elem.id === isEditItem) {\n          setToggleBtn(true);\n          setTasks(\" \");\n          return { ...elem,\n            text: task\n          };\n        }\n\n        return elem;\n      }));\n    } else {\n      setItems([{\n        id: Date.now(),\n        text: task,\n        status: false\n      }, ...items]);\n      setTasks(\"\");\n      setValidatevalue(\"\");\n    }\n  };\n\n  const editItem = id => {\n    let newEditItem = items.find(elem => {\n      alert(\"elem=\" + elem.id);\n      alert(\"id=\" + id);\n      return elem.id === id;\n    });\n    setToggleBtn(false);\n    setTasks(newEditItem.text);\n    setIsEditItem(id);\n  };\n\n  const submitTask = () => {\n    history.push(\"/childlist\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(react.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"parent_div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"secondcontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"heading\",\n            children: \" ToDo App\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 27\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 68\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"thirdcontainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              ref: inputRef,\n              class: \"todonametxt\",\n              value: task,\n              autoComplete: \"off\",\n              maxLength: \"20\",\n              onChange: e => passData(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 27\n            }, this), \"\\xA0\\xA0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"imgbutton\",\n            children: toggleBtn ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addItem,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                class: \"plusimage\",\n                title: \"delete\",\n                src: \"/image/plus.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 67\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addItem,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                class: \"plusimage\",\n                title: \"edit\",\n                src: \"https://img.icons8.com/color/48/000000/edit-property.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 169\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 143\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"validation\",\n            children: validatevalue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this), items.map((elm, ind) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"hhh\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"taskname\",\n                onChange: e => {\n                  setItems(items.filter(obj2 => {\n                    if (obj2.id === elm.id) {\n                      obj2.status = e.target.checked;\n                      setOptionname(elm.text); // alert(\"obj2=\"+obj2.status)\n                      //  updateTaskStatus(obj2.text,obj2.status)\n                    }\n\n                    return obj2;\n                  }));\n                },\n                value: elm.text,\n                checked: elm.status,\n                class: \"optionbtn\",\n                name: \"option\",\n                onClick: submitTask\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                name: \"text\",\n                children: elm.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                title: \"edit item\",\n                class: \"editimg\",\n                src: \"https://img.icons8.com/color/48/000000/edit-property.png\",\n                onClick: () => editItem(elm.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fa fa-trash\",\n                title: \"delete Item\",\n                onClick: () => deleteItem(ind, elm.text)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 10\n              }, this)]\n            }, ind, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Tasklist, \"S/8LtgRP/WxA0i/K1nlOpQmwfVM=\", false, function () {\n  return [useHistory];\n});\n\n_c = Tasklist;\nexport default Tasklist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasklist\");","map":{"version":3,"sources":["/home/sonia/projects/AdvancedToDo/client/src/components/TaskList.js"],"names":["react","React","useState","useHistory","useContext","ListContext","useRef","useEffect","Tasklist","optionname","setOptionname","task","setTasks","items","setItems","toggleBtn","setToggleBtn","isEditItem","setIsEditItem","optStatus","setOptStatus","taskValue","setTaskvalue","validatevalue","setValidatevalue","history","passData","val","length","inputRef","current","focus","deleteItem","id","task_del","updatedItems","filter","elm","ind","addItem","map","elem","text","Date","now","status","editItem","newEditItem","find","alert","submitTask","push","e","target","value","obj2","checked"],"mappings":"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","sourcesContent":["import react from 'react';\nimport React, { useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport{useContext} from 'react';\nimport {ListContext} from '../context/ListContext.js'\nimport  { useRef, useEffect } from 'react';\n\n\nconst Tasklist=()=>{\n\n    const{optionname,setOptionname}=useContext(ListContext)\n    const [task,setTasks] = useState(\"\");\n    const [items,setItems]=useState([]);\n    const[toggleBtn,setToggleBtn]=useState(true);\n    const[isEditItem,setIsEditItem]=useState(null);\n    const[optStatus,setOptStatus]=useState(false);\n    const[taskValue,setTaskvalue]=useState(\"\")\n    const[validatevalue,setValidatevalue]=useState(\"\")\n    let history=useHistory();\n   \n  function passData(val)\n  {\n  setTasks(val);\n    \n    return val.length<20 ?'':setValidatevalue(\"max char20\")\n  \n \n  }\n  const inputRef = useRef();\n  useEffect(() => {\n     inputRef.current.focus();\n\n                  })\n\n  const deleteItem=(id,task_del)=>{\n    const updatedItems=items.filter((elm,ind)=>{\n        \n        return ind!==id;\n       \n                     } ) ;\n             //deleteTask(task_del);\n             setItems(updatedItems);\n\n        } \n\n  const addItem=()=>{\n    if(!task){\n    }else if(task && !toggleBtn){\n\n      setItems(\n        items.map((elem)=>{\n          if(elem.id===isEditItem){\n            setToggleBtn(true)\n          \n            setTasks(\" \")\n            return{...elem,text:task}\n            \n          }\n          return elem;\n        })\n      \n      )\n    } else{\n    setItems([{id:Date.now(),text:task,status:false},...items]);\n\n    setTasks(\"\");\n    setValidatevalue(\"\");\n   \n }\n }\nconst editItem=(id)=>{\n  \n  let newEditItem=items.find((elem)=>{\n    alert(\"elem=\"+elem.id)\n    alert(\"id=\"+id)\nreturn elem.id===id\n\n  });\n  setToggleBtn(false);\nsetTasks(newEditItem.text)\nsetIsEditItem(id)\n\n\n}\nconst submitTask=()=>{\n\n  \n\n  history.push(\"/childlist\");\n\n                 \n\n}\n\n\n    return(\n\n        <react.Fragment>\n          \n          <div class=\"parent_div\">\n                   <div class=\"container\">\n                \n                     \n                          <div class=\"secondcontainer\">\n                          <label class=\"heading\"> ToDo App</label> <br></br> \n                          \n                        <span class=\"thirdcontainer\">\n                          <input type=\"text\"  ref={inputRef} class=\"todonametxt\" value={task}autoComplete=\"off\" maxLength=\"20\" onChange={(e)=>passData(e.target.value)}></input>&nbsp;&nbsp;\n                          </span>\n                          \n                          <span class=\"imgbutton\">\n                            {\n\n                              toggleBtn?<button onClick={addItem}><img class=\"plusimage\" title=\"delete\" src=\"/image/plus.png\"></img></button>:<button onClick={addItem}><img class=\"plusimage\" title=\"edit\" src=\"https://img.icons8.com/color/48/000000/edit-property.png\"></img></button>\n                            }\n                            </span>\n                            <label class=\"validation\">{validatevalue}</label>\n                      \n                          { \n    \n    items.map((elm,ind)=>{\n  \n        return(\n          \n         \n                <div class=\"hhh\" key={ind}>\n\n                <input type=\"radio\"  name=\"taskname\"    onChange={(e)=>{\n                \n                 setItems(items.filter(obj2=>{\n                  \n\n                  if(obj2.id===elm.id){\n          \n                   obj2.status=e.target.checked\n\n  setOptionname(elm.text);\n  \n              // alert(\"obj2=\"+obj2.status)\n            \n               \n              //  updateTaskStatus(obj2.text,obj2.status)\n          \n                         \n                  }\n                  return obj2\n               \n                 \n                 })\n                 )}\n               \n                 } value={elm.text} checked={elm.status} class=\"optionbtn\" name=\"option\" onClick= {submitTask} \n                \n                 />\n                 \n                            \n                \n \n         <label name=\"text\">{elm.text}</label>\n         <img title=\"edit item\" class=\"editimg\" src=\"https://img.icons8.com/color/48/000000/edit-property.png\" onClick={()=>editItem(elm.id)}/>\n         <i class=\"fa fa-trash\" title=\"delete Item\" onClick={()=>deleteItem(ind,elm.text)}></i>\n\n          \n              </div>\n            \n            \n             ) \n            \n            }\n            \n            \n            \n\n                \n            )\n                       \n}\n\n\n\n\n                      \n                          </div>\n          \n                   </div>\n                      \n          \n           </div>\n          \n          \n          </react.Fragment>\n          \n            \n          \n          )\n\n}\nexport default Tasklist;"]},"metadata":{},"sourceType":"module"}