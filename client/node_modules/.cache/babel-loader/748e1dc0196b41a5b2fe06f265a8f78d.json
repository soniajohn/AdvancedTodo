{"ast":null,"code":"var _jsxFileName = \"/home/sonia/projects/AdvancedToDo/client/src/components/ChildList.js\",\n    _s = $RefreshSig$();\n\nimport react from 'react';\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useContext } from 'react';\nimport { ListContext } from '../context/ListContext.js';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChildList = () => {\n  _s();\n\n  const [task, setTasks] = useState(\"\");\n  const [items, setItems] = useState([]);\n  const [toggleBtn, setToggleBtn] = useState(true);\n  const [isEditItem, setIsEditItem] = useState(null);\n  const [optStatus, setOptStatus] = useState(false);\n  const {\n    optionname,\n    setOptionname\n  } = useContext(ListContext);\n  const [tskList, settskList] = useState([]);\n  const [showallCheck, setShowallCheck] = useState(\"\");\n  let history = useHistory();\n\n  function passData(val) {\n    setTasks(val);\n  }\n\n  const getTask = e => {\n    Axios.get(\"http://localhost:4000/show\").then(response => settskList(response.data));\n    setShowallCheck(e.target.checked);\n  };\n\n  const deleteItem = (id, task_del) => {\n    const updatedItems = items.filter((elm, ind) => {\n      return ind !== id;\n    });\n    deleteTask(task_del);\n    setItems(updatedItems);\n  };\n\n  const deleteTask = task_del => {\n    Axios.delete(`http://localhost:4000/childdelete/${task_del}`);\n  };\n\n  const updateTask = (tasname, txt) => {\n    // alert(\"status=\"+status)\n    Axios.put(\"http://localhost:4000/childedit\", {\n      tasname: tasname,\n      original_txt: txt\n    }).then(response => {\n      alert(\"update\");\n    });\n  };\n\n  const addItem = () => {\n    if (!task) {} else if (task && !toggleBtn) {\n      setItems(items.map(elem => {\n        if (elem.id === isEditItem) {\n          setToggleBtn(true);\n          setTasks(\" \");\n          updateTask(task, elem.text);\n          return { ...elem,\n            text: task\n          };\n        }\n\n        return elem;\n      }));\n    } else {\n      setItems([{\n        id: Date.now(),\n        text: task,\n        status: false\n      }, ...items]);\n      setTasks(\"\");\n    }\n  };\n\n  const submitTask = () => {\n    alert(\"task=\" + task);\n    alert(\"opt=\" + optionname);\n\n    if (task) {\n      Axios.post(\"http://localhost:4000/childinsert\", {\n        task: task,\n        text: optionname\n      }).then(() => {\n        alert(\"successful insert\");\n      });\n      addItem(); // redirect();\n    } //else{\n    // setTaskvalue(\"please fill the field\");\n    //inputRef.current.focus();\n    //}\n\n  };\n\n  const editItem = id => {\n    let newEditItem = items.find(elem => {\n      alert(\"elem=\" + elem.id);\n      alert(\"id=\" + id);\n      return elem.id === id;\n    });\n    setToggleBtn(false);\n    setTasks(newEditItem.text);\n    setIsEditItem(id);\n  };\n\n  const updateTaskStatus = (txt, status) => {\n    // alert(\"status=\"+status)\n    Axios.put(\"http://localhost:4000/Childupdate\", {\n      status: status,\n      txtupdate: txt\n    }).then(response => {\n      alert(\"update\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(react.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"parent_div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"secondcontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"x\",\n            class: \"closebtn\",\n            onClick: () => {\n              history.push(\"/\");\n            },\n            children: \" X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"heading\",\n            children: [\" \", optionname]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 27\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 72\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"thirdcontainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              class: \"todonametxt\",\n              value: task,\n              autoComplete: \"off\",\n              maxLength: \"20\",\n              onChange: e => passData(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 27\n            }, this), \"\\xA0\\xA0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"imgbutton\",\n            children: toggleBtn ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: submitTask,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                class: \"plusimage\",\n                title: \"delete\",\n                src: \"/image/plus.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 70\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addItem,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                class: \"plusimage\",\n                title: \"edit\",\n                src: \"https://img.icons8.com/color/48/000000/edit-property.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 172\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 146\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 27\n          }, this), items.map((elm, ind) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"hhh\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                name: \"taskname\",\n                onChange: e => {\n                  setItems(items.filter(obj2 => {\n                    if (obj2.id === elm.id) {\n                      obj2.status = e.target.checked; // alert(\"obj2=\"+obj2.status)\n\n                      updateTaskStatus(obj2.text, obj2.status);\n                    }\n\n                    return obj2;\n                  }));\n                },\n                value: elm.text,\n                checked: elm.status,\n                class: \"optionbtn\",\n                name: \"option\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  textDecoration: elm.status ? \"line-through\" : \"none\"\n                },\n                name: \"text\",\n                children: elm.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                title: \"edit item\",\n                class: \"editimg\",\n                src: \"https://img.icons8.com/color/48/000000/edit-property.png\",\n                onClick: () => editItem(elm.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fa fa-trash\",\n                title: \"delete Item\",\n                onClick: () => deleteItem(ind, elm.text)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 10\n              }, this)]\n            }, ind, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"newbtn\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            class: \"newbtn\",\n            value: \" +   Cancel\",\n            onClick: () => history.push(\"/\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"third_div\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        class: \"chkbox\",\n        value: \"\",\n        name: \"todochkbox4\",\n        checked: showallCheck,\n        onChange: getTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"showcomplete_txt\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Show Completed Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 2\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"newbtn\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          name: \"newbtns\",\n          class: \"newbtn\",\n          value: \" + New Task\",\n          onClick: () => {\n            history.push(\"/newtask\");\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 144\n      }, this), tskList.map((val, key) => {\n        if (showallCheck === true) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"showcheck\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Task Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: val.Taskname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Created Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: val.createdDateTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this);\n        } else {\n          return null;\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChildList, \"bslrmbxp+JNTEGCObMDNr51hTJk=\", false, function () {\n  return [useHistory];\n});\n\n_c = ChildList;\nexport default ChildList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChildList\");","map":{"version":3,"sources":["/home/sonia/projects/AdvancedToDo/client/src/components/ChildList.js"],"names":["react","React","useState","useHistory","useContext","ListContext","Axios","ChildList","task","setTasks","items","setItems","toggleBtn","setToggleBtn","isEditItem","setIsEditItem","optStatus","setOptStatus","optionname","setOptionname","tskList","settskList","showallCheck","setShowallCheck","history","passData","val","getTask","e","get","then","response","data","target","checked","deleteItem","id","task_del","updatedItems","filter","elm","ind","deleteTask","delete","updateTask","tasname","txt","put","original_txt","alert","addItem","map","elem","text","Date","now","status","submitTask","post","editItem","newEditItem","find","updateTaskStatus","txtupdate","push","value","obj2","textDecoration","key","Taskname","createdDateTime"],"mappings":"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","sourcesContent":["import react from 'react';\nimport React, { useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport{useContext} from 'react';\nimport {ListContext} from '../context/ListContext.js'\nimport Axios from 'axios';\nconst ChildList=()=>{\n\n    const [task,setTasks] = useState(\"\");\n    const [items,setItems]=useState([]);\n    \n    const[toggleBtn,setToggleBtn]=useState(true);\n    const[isEditItem,setIsEditItem]=useState(null);\n    const[optStatus,setOptStatus]=useState(false)\n    const{optionname,setOptionname}=useContext(ListContext)\n    const[tskList,settskList]=useState([])\n    const[showallCheck,setShowallCheck]=useState(\"\")\n  \n    let history=useHistory();\n\n   \n   \n\n  function passData(val)\n  {\n  setTasks(val)\n\n  }\n\n\n\n  const getTask=(e)=>{\n    \n        \n    Axios.get(\"http://localhost:4000/show\").then((response)=>\n    settskList(response.data)\n   \n      )    \n      setShowallCheck(e.target.checked)\n}\n\n  const deleteItem=(id,task_del)=>{\n    const updatedItems=items.filter((elm,ind)=>{\n        \n        return ind!==id;\n       \n                     } ) ;\n             deleteTask(task_del);\n             setItems(updatedItems);\n\n        } \n        const deleteTask=(task_del)=>{\n\n          Axios.delete(`http://localhost:4000/childdelete/${task_del}`);\n      \n          };\n\n\n          const updateTask=(tasname,txt)=>{\n            // alert(\"status=\"+status)\n             \n          \n          Axios.put(\"http://localhost:4000/childedit\",\n             {\n                tasname:tasname,original_txt:txt\n              \n              }).then((response)=>\n            \n             { alert(\"update\");\n          \n          }\n              \n             );\n            \n            \n          }\n\n\n\n\n\n\n\n\n\n  const addItem=()=>{\n    if(!task){\n    }else if(task && !toggleBtn){\n\n      setItems(\n        items.map((elem)=>{\n          if(elem.id===isEditItem){\n            setToggleBtn(true)\n          \n            setTasks(\" \")\n            updateTask(task,elem.text)\n            return{...elem,text:task}\n            \n          }\n          return elem;\n        })\n      \n      )\n    } else{\n    setItems([{id:Date.now(),text:task,status:false},...items]);\n\n    setTasks(\"\")\n   \n }\n }\n\n\n const submitTask=()=>{\n        alert(\"task=\"+task)\n        alert(\"opt=\"+optionname)\n  if(task){\n      Axios.post(\"http://localhost:4000/childinsert\",{\n      task:task,\n      text:optionname\n           \n   }).then(()=>{\n       alert(\"successful insert\")});\n       addItem();\n      // redirect();\n             }\n  //else{\n    // setTaskvalue(\"please fill the field\");\n     //inputRef.current.focus();\n      //}\n                        };  \n\n\n \nconst editItem=(id)=>{\n  \n  let newEditItem=items.find((elem)=>{\n    alert(\"elem=\"+elem.id)\n    alert(\"id=\"+id)\nreturn elem.id===id\n\n  });\n  setToggleBtn(false);\nsetTasks(newEditItem.text)\nsetIsEditItem(id)\n\n\n}\n\nconst updateTaskStatus=(txt,status)=>{\n  // alert(\"status=\"+status)\n   \n\nAxios.put(\"http://localhost:4000/Childupdate\",\n   { status:status,txtupdate:txt}).then((response)=>\n  \n   { alert(\"update\");\n\n}\n    \n   );\n  \n  \n}\n\n\n\n\n\n\n\n\n\n\n\n    return(\n\n        <react.Fragment>\n          \n          <div class=\"parent_div\">\n                   <div class=\"container\">\n                \n                     \n                          <div class=\"secondcontainer\">\n                          <button id = \"x\" class=\"closebtn\"  onClick={()=>{history.push( \"/\")}}> X</button>\n                   \n                          <label class=\"heading\"> {optionname}</label> <br></br> \n                          \n                        <span class=\"thirdcontainer\">\n                          <input type=\"text\" class=\"todonametxt\" value={task}autoComplete=\"off\" maxLength=\"20\" onChange={(e)=>passData(e.target.value)}></input>&nbsp;&nbsp;\n                          </span>\n                          <span class=\"imgbutton\">\n                            {\n\n                              toggleBtn?<button onClick={submitTask}><img class=\"plusimage\" title=\"delete\" src=\"/image/plus.png\"></img></button>:<button onClick={addItem}><img class=\"plusimage\" title=\"edit\" src=\"https://img.icons8.com/color/48/000000/edit-property.png\"></img></button>\n                            }\n                            </span>\n                      \n                          { \n    \n    items.map((elm,ind)=>{\n  \n        return(\n          \n         \n                <div class=\"hhh\" key={ind}>\n\n                <input type=\"checkbox\"  name=\"taskname\"    onChange={(e)=>{\n                \n                 setItems(items.filter(obj2=>{\n                  \n\n                  if(obj2.id===elm.id){\n          \n                   obj2.status=e.target.checked\n\n  \n              // alert(\"obj2=\"+obj2.status)\n            \n               \n               updateTaskStatus(obj2.text,obj2.status)\n          \n                         \n                  }\n                  return obj2\n               \n                 \n                 })\n                 )}\n               \n                 } value={elm.text} checked={elm.status} class=\"optionbtn\" name=\"option\"\n                \n                 />\n                 \n                            \n                \n \n         <label style={{textDecoration:elm.status?\"line-through\":\"none\"} }  name=\"text\">{elm.text}</label>\n         <img title=\"edit item\" class=\"editimg\" src=\"https://img.icons8.com/color/48/000000/edit-property.png\" onClick={()=>editItem(elm.id)}/>\n         <i class=\"fa fa-trash\" title=\"delete Item\" onClick={()=>deleteItem(ind,elm.text)}></i>\n\n          \n              </div>\n            \n            \n             ) \n            \n            }\n            \n            \n            \n\n                \n            )\n                       \n}\n\n\n\n\n\n                          </div>\n                          <span class=\"newbtn\"><input type=\"button\"  class=\"newbtn\" value= \" +   Cancel\"  onClick={()=>history.push(\"/\")} /></span> \n                   </div>\n                      \n \n           </div>\n\n\n\n\n\n<div class=\"third_div\">\n<input type=\"checkbox\" class=\"chkbox\" value=\"\" name=\"todochkbox4\" checked={showallCheck}  onChange={getTask}\n\n/>\n\n    \n\n\n<span class=\"showcomplete_txt\" >\n     \n <label >Show Completed Task</label></span>\n \n<span class=\"newbtn\"><input type=\"button\"   name=\"newbtns\" class=\"newbtn\" value=\" + New Task\" onClick={()=>{history.push(\"/newtask\")}}/></span><br></br>\n\n   \n {\n     \n    tskList.map((val,key)=>{\n        \n    if(showallCheck===true){\n       \n        return (\n            <div class=\"showcheck\">        \n            <h4>Task Name:</h4><h5>{val.Taskname}</h5>\n            <h4>Created Date:</h4><h5>{val.createdDateTime}</h5>\n            </div>\n            \n                )\n            }\n                else {\n\n                    return null\n                }\n                                 }\n                     )\n}  \n     \n     \n</div>\n\n          \n        \n          \n          </react.Fragment>\n          \n            \n          \n          )\n\n}\nexport default ChildList;"]},"metadata":{},"sourceType":"module"}