{"ast":null,"code":"var _jsxFileName = \"/home/sonia/projects/AdvancedToDo/client/src/components/TaskList.js\",\n    _s = $RefreshSig$();\n\nimport react from 'react';\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tasklist = () => {\n  _s();\n\n  const [task, setTasks] = useState(\"\");\n  const [items, setItems] = useState([]);\n\n  function passData(val) {\n    setTasks(val);\n    alert(task);\n  }\n\n  const addItem = () => {\n    if (!task) {} else {\n      setItems([{\n        id: Date.now(),\n        text: task,\n        status: false\n      }, ...items]);\n      setTasks(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(react.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"parent_div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"secondcontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"heading\",\n            children: \" ToDo App\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 27\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 68\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"thirdcontainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              class: \"todonametxt\",\n              autoComplete: \"off\",\n              maxLength: \"20\",\n              onChange: e => passData(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 27\n            }, this), \"\\xA0\\xA0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"imgbutton\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addItem,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                class: \"plusimage\",\n                src: \"/image/plus.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 77\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 27\n          }, this), items.map((elm, ind) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"taskname\",\n                onChange: e => {\n                  setItems(items.filter(obj2 => {\n                    if (obj2.id === elm.id) {\n                      {\n                        obj2.status = e.target.checked; //  alert(\"obj2=\"+obj2.status)\n                        // updateTaskStatus(obj2.text,obj2.status)\n                      }\n                    }\n\n                    return obj2;\n                  }));\n                },\n                value: elm.status,\n                checked: elm.status,\n                class: \"chkbox\",\n                name: \"Checkbox1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  textDecoration: elm.status ? \"line-through\" : \"none\"\n                },\n                name: \"checktext\",\n                children: elm.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"far fa-trash-alt add-btn\",\n                title: \"delete Item\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 74\n              }, this)]\n            }, ind, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Tasklist, \"5flt7Q6XtsT+xafMzg/rNYcJ+jA=\");\n\n_c = Tasklist;\nexport default Tasklist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasklist\");","map":{"version":3,"sources":["/home/sonia/projects/AdvancedToDo/client/src/components/TaskList.js"],"names":["react","React","useState","Tasklist","task","setTasks","items","setItems","passData","val","alert","addItem","id","Date","now","text","status","e","target","value","map","elm","ind","filter","obj2","checked","textDecoration"],"mappings":"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","sourcesContent":["import react from 'react';\nimport React, { useState} from \"react\";\n\n\nconst Tasklist=()=>{\n\n    const [task,setTasks] = useState(\"\");\n    const [items,setItems]=useState([]);\n    \n\n  function passData(val)\n  {\n  setTasks(val)\nalert(task)\n  }\n\n  const addItem=()=>{\n    if(!task){\n    }else{\n    setItems([{id:Date.now(),text:task,status:false},...items]);\n\n    setTasks(\"\")\n }\n }\n\n\n\n    return(\n\n        <react.Fragment>\n          \n          <div class=\"parent_div\">\n                   <div class=\"container\">\n                \n                     \n                          <div class=\"secondcontainer\">\n                          <label class=\"heading\"> ToDo App</label> <br></br> \n                        <span class=\"thirdcontainer\">\n                          <input type=\"text\" class=\"todonametxt\" autoComplete=\"off\" maxLength=\"20\" onChange={(e)=>passData(e.target.value)}></input>&nbsp;&nbsp;\n                          </span>\n                          <span class=\"imgbutton\"><button onClick={addItem}><img class=\"plusimage\" src=\"/image/plus.png\"></img></button></span>\n                          \n                          { \n    \n    items.map((elm,ind)=>{\n       \n        return(\n\n                <div key={ind}>\n\n                <input type=\"radio\"  name=\"taskname\"  onChange={(e)=>{\n\n                setItems(items.filter(obj2=>{\n\n\n                    if(obj2.id===elm.id){\n            {\n                        obj2.status=e.target.checked\n\n\n                   \n                //  alert(\"obj2=\"+obj2.status)\n                  \n                    \n                 // updateTaskStatus(obj2.text,obj2.status)\n            }\n                           \n                    }\n                    return obj2\n                   \n                })\n             \n                    \n                    )\n                 \n                                     \n                \n                 \n                \n                }}value={elm.status} checked={elm.status} class=\"chkbox\" name=\"Checkbox1\"/>\n\n         <label style={{textDecoration:elm.status?\"line-through\":\"none\"} } name=\"checktext\">{elm.text}</label>\n\n        <i className=\"far fa-trash-alt add-btn\" title=\"delete Item\" ></i><br></br>\n          \n              </div>\n            \n             ) \n            \n            }\n            \n            \n            \n\n                \n            )\n                       \n}\n\n\n\n\n\n                      \n                          </div>\n          \n                   </div>\n                      \n          \n           </div>\n          \n          \n          </react.Fragment>\n          \n            \n          \n          )\n\n}\nexport default Tasklist;"]},"metadata":{},"sourceType":"module"}