{"ast":null,"code":"var _jsxFileName = \"/home/sonia/projects/AdvancedTodo/client/src/components/TaskList.js\",\n    _s = $RefreshSig$();\n\nimport react from 'react';\nimport React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useContext } from 'react';\nimport Axios from 'axios';\nimport { ListContext } from '../context/ListContext.js';\nimport { useRef, useEffect } from 'react';\nimport { subnetMatch } from 'ipaddr.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tasklist = () => {\n  _s();\n\n  const {\n    username,\n    SetUsername,\n    userid,\n    SetUserid\n  } = useContext(ListContext);\n  const {\n    optionname,\n    setOptionname\n  } = useContext(ListContext);\n  const [task, setTasks] = useState(\"\");\n  const [items, setItems] = useState([]);\n  const [toggleBtn, setToggleBtn] = useState(true);\n  const [isEditItem, setIsEditItem] = useState(null);\n  const [optStatus, setOptStatus] = useState(false);\n  const [taskValue, setTaskvalue] = useState(\"\");\n  const [validatevalue, setValidatevalue] = useState(\"\");\n  const [fetchlist, setFetchlist] = useState([]);\n  const [showList, setshowList] = useState([]);\n  let history = useHistory();\n  const [usertasklist, setUsertasklist] = useState([]);\n\n  function passData(val) {\n    if (val.length > 0) {\n      var name = val[0].toUpperCase() + val.slice(1);\n    }\n\n    setTasks(name);\n    return val.length < 15 ? '' : setValidatevalue(\"max char 15\");\n  }\n\n  const submitTask = () => {\n    if (task) {\n      //  Axios.post(\"http://localhost:4000/taskinsert\",{\n      alert(\"userid=\" + userid); //  task:task,userid:userid\n\n      Axios.post(`http://localhost:4000/users/${userid}/todolists`, {\n        task: task\n      }).then(() => {\n        alert(\"successful insert\");\n      });\n      addItem();\n    } else {\n      setTaskvalue(\"please fill the field\");\n      inputRef.current.focus();\n    }\n  };\n\n  const inputRef = useRef();\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const deleteItem = (id, todolist_id) => {\n    const updatedItems = items.filter((elm, ind) => {\n      return ind !== id;\n    });\n    deleteTask(todolist_id);\n    setItems(updatedItems);\n  };\n\n  const updateTask = (tasname, todolistid) => {\n    Axios.put(`http://localhost:4000/users/${userid}/todolists/${todolistid}`, {\n      tasname: tasname\n    }).then(response => {//alert(\"update\");\n    });\n  }; //const updateTaskStatus=(txt,status,Todoid)=>{\n  //  let todolistId=Todoid\n  // Axios.put(`http://localhost:4000/users/${userid}/todolist/${todolistid}`,\n  // { status:status,txtupdate:txt}).then((response)=>\n  // { \n  //alert(\"update\");\n  //  }\n  // );\n  // }\n\n\n  useEffect(() => {\n    Axios.get(`http://localhost:4000/users/${userid}/todolists`, // Axios.get(`http://localhost:4000/fetchData/${userid}`,\n    {}).then(response => {\n      var todoid = response.data[0].Todoid;\n      setItems(response.data);\n      alert(\"bgbg\" + todoid); // setItems([{Taskid:response.data[0].Taskid,Taskname:task,status:false},...items]); \n    }).catch(err => {\n      console.log(err);\n    });\n    Axios.get(`http://localhost:4000/users/todolists`, {}).then(response => {\n      alert(\"max=\" + response.data[0].Todoid);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  const deleteTask = (todolist_id, userid) => {\n    alert(todolist_id);\n    Axios.delete(`http://localhost:4000/users/${userid}/todolists/${todolist_id}`);\n  };\n\n  const addItem = () => {\n    if (!task) {} else if (task && !toggleBtn) {\n      setItems(items.map(elem => {\n        if (elem.Todoid === isEditItem) {\n          setToggleBtn(true);\n          setTasks(\" \");\n          updateTask(task, elem.Todoid);\n          return { ...elem,\n            Todoname: task\n          };\n        }\n\n        return elem;\n      }));\n    } else {\n      // getTaskid()\n      // alert(\"getid=\"+getid)\n      // setGetid(getid)\n      setItems([{\n        Todoname: task,\n        status: false\n      }, ...items]);\n      setTasks(\"\");\n      setValidatevalue(\"\");\n    }\n  };\n\n  const editItem = id => {\n    let newEditItem = items.find(elem => {\n      //  alert(\"id=\"+id)\n      return elem.Todoid === id;\n    });\n    setToggleBtn(false); // alert(\"new=\"+newEditItem.Taskname)\n\n    setTasks(newEditItem.Todoname); // alert(\"id=\"+id)\n\n    setIsEditItem(id);\n  };\n\n  const redirectTask = () => {\n    history.push(\"/users/:userid/todolist/:todolistid\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(react.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"parent_div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"secondcontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"logout\",\n            class: \"closebtn\",\n            title: \"Log out\",\n            onClick: () => {\n              history.push(\"/\");\n            },\n            children: \" ...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"heading\",\n            children: [\" Hi...\", username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 61\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"thirdcontainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              ref: inputRef,\n              class: \"todonametxt\",\n              title: validatevalue,\n              value: task,\n              autoComplete: \"off\",\n              maxLength: \"20\",\n              onChange: e => passData(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this), \"\\xA0\\xA0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"imgbutton\",\n            children: toggleBtn ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: submitTask,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                class: \"plusimage\",\n                src: \"/image/plus.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addItem,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                class: \"plusimage\",\n                title: \"edit\",\n                src: \"https://img.icons8.com/color/48/000000/edit-property.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 147\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 121\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), items.map((elm, ind) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"insert\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"taskname\",\n                onChange: e => {\n                  setItems(items.filter(obj2 => {\n                    if (obj2.childtodo_id === elm.childtodo_id) {\n                      obj2.status = e.target.checked;\n                      setOptionname(elm.Todoname);\n                      alert(\"sss\" + elm.todoid); //setOptionname(items)\n                      //   updateTaskStatus(obj2.text,obj2.status,obj2.Todoid)\n                    }\n\n                    return obj2;\n                  }));\n                },\n                value: elm.Todoname,\n                checked: elm.status,\n                class: \"optionbtn\",\n                name: \"option\",\n                onClick: redirectTask\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                name: \"text\",\n                children: elm.Todoname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                title: \"edit item\",\n                class: \"editimg\",\n                src: \"https://img.icons8.com/color/48/000000/edit-property.png\",\n                onClick: () => editItem(elm.Todoid)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fa fa-trash\",\n                title: \"delete Item\",\n                onClick: () => deleteItem(ind, elm.Todoid)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 21\n              }, this)]\n            }, ind, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tasklist, \"zsg/KQjnUNvvVYC4a3/XP+0RQKg=\", false, function () {\n  return [useHistory];\n});\n\n_c = Tasklist;\nexport default Tasklist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasklist\");","map":{"version":3,"sources":["/home/sonia/projects/AdvancedTodo/client/src/components/TaskList.js"],"names":["react","React","useState","Link","useHistory","useContext","Axios","ListContext","useRef","useEffect","subnetMatch","Tasklist","username","SetUsername","userid","SetUserid","optionname","setOptionname","task","setTasks","items","setItems","toggleBtn","setToggleBtn","isEditItem","setIsEditItem","optStatus","setOptStatus","taskValue","setTaskvalue","validatevalue","setValidatevalue","fetchlist","setFetchlist","showList","setshowList","history","usertasklist","setUsertasklist","passData","val","length","name","toUpperCase","slice","submitTask","alert","post","then","addItem","inputRef","current","focus","deleteItem","id","todolist_id","updatedItems","filter","elm","ind","deleteTask","updateTask","tasname","todolistid","put","response","get","todoid","data","Todoid","catch","err","console","log","delete","map","elem","Todoname","status","editItem","newEditItem","find","redirectTask","push","e","target","value","obj2","childtodo_id","checked"],"mappings":"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","sourcesContent":["import react from 'react';\nimport React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useContext } from 'react';\nimport Axios from 'axios';\nimport { ListContext } from '../context/ListContext.js'\nimport { useRef, useEffect } from 'react';\nimport { subnetMatch } from 'ipaddr.js';\n\n\n\n\n\nconst Tasklist = () => {\n\n\n  const { username, SetUsername, userid, SetUserid } = useContext(ListContext);\n  const { optionname, setOptionname } = useContext(ListContext)\n  const [task, setTasks] = useState(\"\");\n  const [items, setItems] = useState([]);\n  const [toggleBtn, setToggleBtn] = useState(true);\n  const [isEditItem, setIsEditItem] = useState(null);\n  const [optStatus, setOptStatus] = useState(false);\n  const [taskValue, setTaskvalue] = useState(\"\")\n  const [validatevalue, setValidatevalue] = useState(\"\")\n  const [fetchlist, setFetchlist] = useState([])\n  const [showList, setshowList] = useState([])\n\n  let history = useHistory();\n\n  const [usertasklist, setUsertasklist] = useState([])\n\n\n\n\n\n\n\n\n  function passData(val) {\n    if (val.length > 0) {\n      var name = val[0].toUpperCase() + val.slice(1)\n\n    }\n\n    setTasks(name);\n\n    return val.length < 15 ? '' : setValidatevalue(\"max char 15\");\n\n  }\n\n\n\n  const submitTask = () => {\n\n    if (task) {\n\n      //  Axios.post(\"http://localhost:4000/taskinsert\",{\n      alert(\"userid=\" + userid)\n      //  task:task,userid:userid\n      Axios.post(`http://localhost:4000/users/${userid}/todolists`, {\n\n        task: task\n      }).then(() => {\n        alert(\"successful insert\")\n      });\n      addItem();\n\n\n\n    }\n    else {\n      setTaskvalue(\"please fill the field\");\n      inputRef.current.focus();\n    }\n  };\n\n\n\n  const inputRef = useRef();\n  useEffect(() => {\n    inputRef.current.focus();\n\n  })\n\n\n\n\n  const deleteItem = (id, todolist_id) => {\n    const updatedItems = items.filter((elm, ind) => {\n\n      return ind !== id;\n\n    });\n    deleteTask(todolist_id);\n    setItems(updatedItems);\n\n  }\n\n\n\n\n\n\n\n  const updateTask = (tasname, todolistid) => {\n\n\n\n    Axios.put(`http://localhost:4000/users/${userid}/todolists/${todolistid}`,\n      {\n        tasname: tasname\n\n      }).then((response) => {\n        //alert(\"update\");\n\n      }\n\n      );\n\n\n  }\n\n\n  //const updateTaskStatus=(txt,status,Todoid)=>{\n\n  //  let todolistId=Todoid\n  // Axios.put(`http://localhost:4000/users/${userid}/todolist/${todolistid}`,\n  // { status:status,txtupdate:txt}).then((response)=>\n\n  // { \n  //alert(\"update\");\n\n  //  }\n\n  // );\n\n\n  // }\n\n\n  useEffect(() => {\n\n    Axios.get(`http://localhost:4000/users/${userid}/todolists`,\n\n      // Axios.get(`http://localhost:4000/fetchData/${userid}`,\n      {}\n\n    ).then(response => {\n\n      var todoid = response.data[0].Todoid\n      setItems(response.data)\n\n      alert(\"bgbg\" + todoid)\n      // setItems([{Taskid:response.data[0].Taskid,Taskname:task,status:false},...items]); \n\n    })\n      .catch(err => {\n        console.log(err)\n\n\n      })\n\n\n    Axios.get(`http://localhost:4000/users/todolists`,\n      {})\n      .then(response => {\n        alert(\"max=\" + response.data[0].Todoid)\n\n      }).catch(err => {\n\n        console.log(err)\n      })\n\n\n  }, []);\n\n\n\n\n\n\n\n  const deleteTask = (todolist_id, userid) => {\n    alert(todolist_id)\n    Axios.delete(`http://localhost:4000/users/${userid}/todolists/${todolist_id}`);\n\n  };\n\n\n  const addItem = () => {\n    if (!task) {\n    } else if (task && !toggleBtn) {\n\n      setItems(\n        items.map((elem) => {\n\n          if (elem.Todoid === isEditItem) {\n            setToggleBtn(true)\n\n            setTasks(\" \")\n            updateTask(task, elem.Todoid)\n            return { ...elem, Todoname: task }\n\n          }\n          return elem;\n        })\n\n      )\n    } else {\n      // getTaskid()\n      // alert(\"getid=\"+getid)\n\n\n      // setGetid(getid)\n      setItems([{ Todoname: task, status: false }, ...items]);\n\n      setTasks(\"\");\n      setValidatevalue(\"\");\n\n    }\n  }\n\n\n\n\n\n\n  const editItem = (id) => {\n\n    let newEditItem = items.find((elem) => {\n      //  alert(\"id=\"+id)\n      return elem.Todoid === id\n\n    });\n    setToggleBtn(false);\n    // alert(\"new=\"+newEditItem.Taskname)\n    setTasks(newEditItem.Todoname)\n    // alert(\"id=\"+id)\n    setIsEditItem(id)\n\n\n  }\n\n\n  const redirectTask = () => {\n\n\n\n    history.push(\"/users/:userid/todolist/:todolistid\");\n\n\n\n  }\n\n\n\n\n  return (\n\n    <react.Fragment>\n\n      <div class=\"parent_div\">\n        <div class=\"container\">\n\n\n          <div class=\"secondcontainer\">\n            <button id=\"logout\" class=\"closebtn\" title=\"Log out\" onClick={() => { history.push(\"/\") }}> ...</button>\n            <label class=\"heading\"> Hi...{username}</label> <br></br>\n\n            <span class=\"thirdcontainer\">\n              <input type=\"text\" ref={inputRef} class=\"todonametxt\" title={validatevalue} value={task} autoComplete=\"off\" maxLength=\"20\" onChange={(e) => passData(e.target.value)}></input>&nbsp;&nbsp;\n            </span>\n\n            <span class=\"imgbutton\">\n              {\n\n                toggleBtn ? <button onClick={submitTask}><img class=\"plusimage\" src=\"/image/plus.png\"></img></button> : <button onClick={addItem}><img class=\"plusimage\" title=\"edit\" src=\"https://img.icons8.com/color/48/000000/edit-property.png\"></img></button>\n              }\n            </span>\n\n\n            {\n\n              items.map((elm, ind) => {\n\n                return (\n\n\n                  <div class=\"insert\" key={ind}>\n\n                    <input type=\"radio\" name=\"taskname\" onChange={(e) => {\n\n                      setItems(items.filter(obj2 => {\n\n\n                        if (obj2.childtodo_id === elm.childtodo_id) {\n\n                          obj2.status = e.target.checked\n\n                          setOptionname(elm.Todoname);\n                        alert(\"sss\"+ elm.todoid)\n\n                          //setOptionname(items)\n\n\n                          //   updateTaskStatus(obj2.text,obj2.status,obj2.Todoid)\n\n\n                        }\n                        return obj2\n\n\n                      })\n                      )\n                    }\n\n                    } value={elm.Todoname} checked={elm.status} class=\"optionbtn\" name=\"option\" onClick={redirectTask}\n\n                    />\n\n\n\n\n                    <label name=\"text\">{elm.Todoname}</label>\n                    <img title=\"edit item\" class=\"editimg\" src=\"https://img.icons8.com/color/48/000000/edit-property.png\" onClick={() => editItem(elm.Todoid)} />\n                    <i class=\"fa fa-trash\" title=\"delete Item\" onClick={() => deleteItem(ind, elm.Todoid)}></i>\n\n\n                  </div>\n\n\n                )\n\n              }\n\n\n\n\n\n              )\n\n            }\n\n\n          </div>\n\n        </div>\n\n\n      </div>\n\n\n\n    </react.Fragment>\n\n\n\n  )\n\n}\nexport default Tasklist;"]},"metadata":{},"sourceType":"module"}