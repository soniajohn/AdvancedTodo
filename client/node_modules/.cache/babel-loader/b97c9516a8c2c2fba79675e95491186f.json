{"ast":null,"code":"var _jsxFileName = \"/home/sonia/projects/AdvancedTodo/client/src/components/ChildList.js\",\n    _s = $RefreshSig$();\n\nimport react from 'react';\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useContext } from 'react';\nimport { ListContext } from '../context/ListContext.js';\nimport Axios from 'axios';\nimport { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChildList = () => {\n  _s();\n\n  const [task, setTasks] = useState(\"\");\n  const [items, setItems] = useState([]);\n  const [toggleBtn, setToggleBtn] = useState(true);\n  const [isEditItem, setIsEditItem] = useState(null);\n  const {\n    optionname,\n    setOptionname\n  } = useContext(ListContext);\n  const [validatevalue, setValidatevalue] = useState(\"\");\n  const [tskList, settskList] = useState([]);\n  const [showallCheck, setShowallCheck] = useState(\"\");\n  const {\n    username,\n    SetUsername,\n    userid,\n    SetUserid,\n    childtaskid,\n    Setchildtaskid\n  } = useContext(ListContext);\n  const [fetchid, setFetchid] = useState([]);\n  let history = useHistory();\n\n  function passData(val) {\n    if (val.length > 0) {\n      var name = val[0].toUpperCase() + val.slice(1);\n    }\n\n    setTasks(name);\n    return val.length < 15 ? '' : setValidatevalue(\"max char 15\");\n  }\n\n  const deleteItem = (id, task_del) => {\n    const updatedItems = items.filter((elm, ind) => {\n      return ind !== id;\n    });\n    deleteTask(task_del);\n    setItems(updatedItems);\n  };\n\n  const deleteTask = childtask_id => {\n    // alert(\"del=\"+task_del)\n    let taskid = childtask_id;\n    let todolistId = fetchid;\n    alert(taskid);\n    Axios.delete(`http://localhost:4000/users/${userid}/todolists/${todolistId}/tasks/${taskid}`);\n  };\n\n  const updateTask = (tasname, childtodo_id) => {\n    let taskid = childtodo_id,\n        todolistid = fetchid;\n    alert(taskid);\n    Axios.put(`http://localhost:4000/users/${userid}/todolists/${todolistid}/tasks/${taskid}`, {\n      tasname: tasname\n    }).then(response => {\n      alert(\"update\");\n    });\n  };\n\n  const addItem = () => {\n    if (!task) {} else if (task && !toggleBtn) {\n      setItems(items.map(elem => {\n        //alert(\"elem=\"+elem.childtodo_id)\n        // alert(\"isedit=\"+isEditItem)\n        if (elem.childtodo_id === isEditItem) {\n          setToggleBtn(true);\n          setTasks(\" \");\n          updateTask(task, elem.childtodo_id);\n          return { ...elem,\n            childtask_name: task\n          };\n        }\n\n        return elem;\n      }));\n    } else {\n      setItems([{\n        childtask_name: task,\n        child_status: false\n      }, ...items]);\n      setTasks(\"\");\n    }\n  };\n\n  const inputRef = useRef();\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const submitTask = () => {\n    let todolistid = childtaskid;\n\n    if (task) {\n      Axios.post(`http://localhost:4000/users/${userid}/todolists/${todolistid}/tasks`, {\n        task: task,\n        text: optionname,\n        Todoid: fetchid\n      }).then(() => {\n        alert(\"successful insert\");\n      });\n      addItem();\n    }\n  };\n\n  const editItem = id => {\n    let newEditItem = items.find(elem => {\n      //alert(\"elem=\"+elem.childtodo_id)\n      //alert(\"id=\"+id)\n      return elem.childtodo_id === id;\n    });\n    setToggleBtn(false);\n    setTasks(newEditItem.childtask_name);\n    setIsEditItem(id);\n  };\n\n  useEffect(() => {\n    let todolistId = childtaskid;\n    alert(\"todo=\" + todolistId);\n    Axios.get(`http://localhost:4000/user/${userid}/todolists/${todolistId}/tasks `, {// optionname\n    }).then(response => {\n      // var todoid = response.data[0].childtodo_id\n      // alert(\"mmm\"+todoid)\n      setItems(response.data); // setFetchid(todoid)\n\n      alert(\"hello\"); //Axios.get(`http://localhost:4000/user/${userid}/todolists/${todoid}`,\n      //{\n      //}).then(response => {\n      //setItems([{id:Date.now(),childtask_name:task,child_status:false});\n      // setItems(response.data)\n      //})\n      // .catch(err => {\n      // console.log(err)\n      //})\n    }).catch(err => {\n      console.log(err);\n    }); // SetUsername( response.data[0].user)\n  }, []);\n\n  const getTask = e => {\n    let todolistid = fetchid;\n    Axios.get(`http://localhost:4000/users/${userid}/todolists/${todolistid}`, {}).then(response => settskList(response.data));\n    setShowallCheck(e.target.checked);\n  };\n\n  const updateTaskStatus = (txt, status, childtodo_id) => {\n    // alert(\"update\"+txt)\n    let taskid = childtodo_id;\n    let todolistId = fetchid;\n    Axios.put(`http://localhost:4000/users/${userid}/todolists/${todolistId}/taasks/${taskid}`, {\n      status: status,\n      txtupdate: txt\n    }).then(response => {\n      alert(\"update\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(react.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"parent_div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"secondcontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"heading\",\n            children: [\" \", optionname]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 58\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"thirdcontainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              class: \"todonametxt\",\n              ref: inputRef,\n              title: validatevalue,\n              value: task,\n              autoComplete: \"off\",\n              maxLength: \"20\",\n              onChange: e => passData(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this), \"\\xA0\\xA0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"imgbutton\",\n            children: toggleBtn ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: submitTask,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                class: \"plusimage\",\n                title: \"\",\n                src: \"/image/plus.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addItem,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                class: \"plusimage\",\n                title: \"edit\",\n                src: \"https://img.icons8.com/color/48/000000/edit-property.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 156\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 130\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), items.map((elm, ind) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"hhh\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                name: \"taskname\",\n                onChange: e => {\n                  // alert(\"elmout\"+elm.id)\n                  setItems(items.filter(obj2 => {\n                    if (obj2.childtodo_id === elm.childtodo_id) {\n                      obj2.child_status = e.target.checked;\n                      updateTaskStatus(obj2.childtask_name, obj2.child_status, obj2.childtodo_id);\n                    }\n\n                    return obj2;\n                  }));\n                },\n                value: elm.childtask_name,\n                checked: elm.child_status == 0 ? false : true,\n                class: \"optionbtn\",\n                name: \"option\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  textDecoration: elm.child_status == 1 ? \"line-through\" : \"none\"\n                },\n                name: \"text\",\n                children: elm.childtask_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                title: \"edit item\",\n                class: \"editimg\",\n                src: \"https://img.icons8.com/color/48/000000/edit-property.png\",\n                onClick: () => editItem(elm.childtodo_id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fa fa-trash\",\n                title: \"delete Item\",\n                onClick: () => deleteItem(ind, elm.childtodo_id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 21\n              }, this)]\n            }, ind, true, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"third_div\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            class: \"\",\n            value: \"0\",\n            name: \"\",\n            checked: showallCheck,\n            onChange: getTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"showcomplete_txt\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"completed Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this), tskList.map((val, key) => {\n            if (showallCheck === true) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"showcheck\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Task Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 23\n                }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: val.childtask_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 54\n                }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"\\xA0\\xA0Created Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 23\n                }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: val.child_date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 69\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 21\n              }, this);\n            } else {\n              return null;\n            }\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"newbtn\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            class: \"newbtn\",\n            value: \" +   back\",\n            onClick: () => history.push(\"/users/:userid/todolists\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChildList, \"7wSnxqmenMGQMzpVejAq+8j7gq4=\", false, function () {\n  return [useHistory];\n});\n\n_c = ChildList;\nexport default ChildList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChildList\");","map":{"version":3,"sources":["/home/sonia/projects/AdvancedTodo/client/src/components/ChildList.js"],"names":["react","React","useState","useHistory","useContext","ListContext","Axios","useRef","useEffect","ChildList","task","setTasks","items","setItems","toggleBtn","setToggleBtn","isEditItem","setIsEditItem","optionname","setOptionname","validatevalue","setValidatevalue","tskList","settskList","showallCheck","setShowallCheck","username","SetUsername","userid","SetUserid","childtaskid","Setchildtaskid","fetchid","setFetchid","history","passData","val","length","name","toUpperCase","slice","deleteItem","id","task_del","updatedItems","filter","elm","ind","deleteTask","childtask_id","taskid","todolistId","alert","delete","updateTask","tasname","childtodo_id","todolistid","put","then","response","addItem","map","elem","childtask_name","child_status","inputRef","current","focus","submitTask","post","text","Todoid","editItem","newEditItem","find","get","data","catch","err","console","log","getTask","e","target","checked","updateTaskStatus","txt","status","txtupdate","value","obj2","textDecoration","key","child_date","push"],"mappings":"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","sourcesContent":["import react from 'react';\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useContext } from 'react';\nimport { ListContext } from '../context/ListContext.js'\nimport Axios from 'axios';\nimport { useRef, useEffect } from 'react';\n\n\nconst ChildList = () => {\n\n  const [task, setTasks] = useState(\"\");\n  const [items, setItems] = useState([]);\n\n  const [toggleBtn, setToggleBtn] = useState(true);\n  const [isEditItem, setIsEditItem] = useState(null);\n\n  const { optionname, setOptionname } = useContext(ListContext)\n  const [validatevalue, setValidatevalue] = useState(\"\")\n  const [tskList, settskList] = useState([])\n  const [showallCheck, setShowallCheck] = useState(\"\")\n  const { username, SetUsername, userid, SetUserid, childtaskid,Setchildtaskid} = useContext(ListContext);\n  const [fetchid, setFetchid] = useState([])\n\n  let history = useHistory();\n\n\n\n\n  function passData(val) {\n\n    if (val.length > 0) {\n      var name = val[0].toUpperCase() + val.slice(1)\n\n    }\n\n    setTasks(name);\n\n\n    return val.length < 15 ? '' : setValidatevalue(\"max char 15\");\n\n  }\n\n\n\n  const deleteItem = (id, task_del) => {\n    const updatedItems = items.filter((elm, ind) => {\n\n      return ind !== id;\n\n    });\n    deleteTask(task_del);\n    setItems(updatedItems);\n\n  }\n\n\n\n  const deleteTask = (childtask_id) => {\n    // alert(\"del=\"+task_del)\n    let taskid = childtask_id\n    let todolistId = fetchid\n    alert(taskid)\n\n    Axios.delete(`http://localhost:4000/users/${userid}/todolists/${todolistId}/tasks/${taskid}`);\n\n  };\n\n\n\n\n  const updateTask = (tasname, childtodo_id) => {\n    let taskid = childtodo_id, todolistid = fetchid\n\n    alert(taskid)\n    Axios.put(`http://localhost:4000/users/${userid}/todolists/${todolistid}/tasks/${taskid}`,\n      {\n        tasname: tasname\n\n      }).then((response) => {\n        alert(\"update\");\n\n      }\n\n      );\n\n\n  }\n\n\n\n\n\n\n  const addItem = () => {\n    if (!task) {\n    } else if (task && !toggleBtn) {\n\n      setItems(\n        items.map((elem) => {\n\n          //alert(\"elem=\"+elem.childtodo_id)\n          // alert(\"isedit=\"+isEditItem)\n          if (elem.childtodo_id === isEditItem) {\n            setToggleBtn(true)\n\n            setTasks(\" \")\n\n\n            updateTask(task, elem.childtodo_id)\n            return { ...elem, childtask_name: task }\n\n          }\n          return elem;\n        })\n\n      )\n    } else {\n\n\n\n      setItems([{ childtask_name: task, child_status: false }, ...items]);\n\n      setTasks(\"\")\n\n    }\n  }\n\n\n\n  const inputRef = useRef();\n  useEffect(() => {\n    inputRef.current.focus();\n\n  })\n\n\n\n\n  const submitTask = () => {\n\n    let todolistid = childtaskid\n\n    if (task) {\n      Axios.post(`http://localhost:4000/users/${userid}/todolists/${todolistid}/tasks`, {\n        task: task,\n        text: optionname,\n        Todoid: fetchid,\n\n\n      }).then(() => {\n        alert(\"successful insert\")\n\n      });\n      addItem();\n\n    }\n\n\n  };\n\n\n\n  const editItem = (id) => {\n    let newEditItem = items.find((elem) => {\n      //alert(\"elem=\"+elem.childtodo_id)\n      //alert(\"id=\"+id)\n\n      return elem.childtodo_id === id\n\n    });\n    setToggleBtn(false);\n    setTasks(newEditItem.childtask_name)\n    setIsEditItem(id)\n\n\n  }\n\n\n\n\n  useEffect(() => {\n    let todolistId = childtaskid\n    alert(\"todo=\"+todolistId)\n    Axios.get(`http://localhost:4000/user/${userid}/todolists/${todolistId}/tasks `,\n\n      {\n       // optionname\n      }).then(response => {\n\n\n       // var todoid = response.data[0].childtodo_id\n       // alert(\"mmm\"+todoid)\n        setItems(response.data)\n       // setFetchid(todoid)\n\nalert(\"hello\")\n\n\n\n        //Axios.get(`http://localhost:4000/user/${userid}/todolists/${todoid}`,\n          //{\n\n          //}).then(response => {\n\n            //setItems([{id:Date.now(),childtask_name:task,child_status:false});\n\n           // setItems(response.data)\n\n\n\n\n          //})\n         // .catch(err => {\n           // console.log(err)\n\n          //})\n\n\n\n      })\n      .catch(err => {\n        console.log(err)\n\n      })\n    // SetUsername( response.data[0].user)\n\n  }, []);\n\n\n\n\n\n\n  const getTask = (e) => {\n\n    let todolistid = fetchid\n\n    Axios.get(`http://localhost:4000/users/${userid}/todolists/${todolistid}`, {\n\n\n    }).then((response) =>\n      settskList(response.data)\n\n    )\n\n    setShowallCheck(e.target.checked)\n  }\n\n\n\n\n\n  const updateTaskStatus = (txt, status, childtodo_id) => {\n    // alert(\"update\"+txt)\n    let taskid = childtodo_id\n    let todolistId = fetchid\n\n    Axios.put(`http://localhost:4000/users/${userid}/todolists/${todolistId}/taasks/${taskid}`,\n      { status: status, txtupdate: txt }).then((response) => {\n        alert(\"update\");\n\n      }\n\n      );\n\n  }\n\n\n\n\n\n  return (\n\n    <react.Fragment>\n\n      <div class=\"parent_div\">\n        <div class=\"container\">\n\n\n          <div class=\"secondcontainer\">\n\n\n            <label class=\"heading\"> {optionname}</label> <br></br>\n\n            <span class=\"thirdcontainer\">\n              <input type=\"text\" class=\"todonametxt\" ref={inputRef} title={validatevalue} value={task} autoComplete=\"off\" maxLength=\"20\" onChange={(e) => passData(e.target.value)}></input>&nbsp;&nbsp;\n            </span>\n            <span class=\"imgbutton\">\n              {\n\n                toggleBtn ? <button onClick={submitTask}><img class=\"plusimage\" title=\"\" src=\"/image/plus.png\"></img></button> : <button onClick={addItem}><img class=\"plusimage\" title=\"edit\" src=\"https://img.icons8.com/color/48/000000/edit-property.png\"></img></button>\n              }\n            </span>\n\n            {\n\n              items.map((elm, ind) => {\n\n\n\n                return (\n\n\n                  <div class=\"hhh\" key={ind}>\n\n\n                    <input type=\"checkbox\" name=\"taskname\" onChange={(e) => {\n                      // alert(\"elmout\"+elm.id)\n\n                      setItems(items.filter(obj2 => {\n\n\n\n                        if (obj2.childtodo_id === elm.childtodo_id) {\n\n                          obj2.child_status = e.target.checked\n\n\n\n\n                          updateTaskStatus(obj2.childtask_name, obj2.child_status, obj2.childtodo_id)\n\n\n                        }\n                        return obj2\n\n\n                      })\n                      )\n                    }\n\n\n\n\n                    } value={elm.childtask_name} checked={elm.child_status == 0 ? false : true} class=\"optionbtn\" name=\"option\"\n\n                    />\n\n\n\n\n                    <label style={{ textDecoration: elm.child_status == 1 ? \"line-through\" : \"none\" }} name=\"text\">{elm.childtask_name}</label>\n                    <img title=\"edit item\" class=\"editimg\" src=\"https://img.icons8.com/color/48/000000/edit-property.png\" onClick={() => editItem(elm.childtodo_id)} />\n                    <i class=\"fa fa-trash\" title=\"delete Item\" onClick={() => deleteItem(ind, elm.childtodo_id)}></i>\n\n\n                  </div>\n\n\n                )\n\n              }\n\n\n\n\n\n              )\n\n            }\n\n\n\n\n\n          </div>\n          <div class=\"third_div\">\n\n            <input type=\"checkbox\" class=\"\" value=\"0\" name=\"\" checked={showallCheck} onChange={getTask}\n\n            />\n\n\n\n\n            <span class=\"showcomplete_txt\" >\n\n              <label >completed Task</label></span>\n            {\n\n              tskList.map((val, key) => {\n\n                if (showallCheck === true) {\n\n                  return (\n                    <div class=\"showcheck\">\n                      <h4>Task Name:</h4>&nbsp;&nbsp;<h5>{val.childtask_name}</h5>\n                      <h4>&nbsp;&nbsp;Created Date:</h4>&nbsp;&nbsp;<h5>{val.child_date}</h5>\n                    </div>\n\n                  )\n                }\n                else {\n\n                  return null\n                }\n              }\n              )\n            }\n\n\n\n\n\n          </div>\n\n\n\n\n          <span class=\"newbtn\"><input type=\"button\" class=\"newbtn\" value=\" +   back\" onClick={() => history.push(\"/users/:userid/todolists\")} /></span>\n\n\n        </div>\n      </div>\n\n\n\n\n    </react.Fragment>\n\n\n\n  )\n\n}\nexport default ChildList;"]},"metadata":{},"sourceType":"module"}