{"ast":null,"code":"var _jsxFileName = \"/home/sonia/projects/AdvancedToDo/client/src/components/TaskList.js\",\n    _s = $RefreshSig$();\n\nimport react from 'react';\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tasklist = () => {\n  _s();\n\n  const [task, setTasks] = useState(\"\");\n  const [items, setItems] = useState([]);\n  const [toggleBtn, setToggleBtn] = useState(true);\n  const [isEditItem, setIsEditItem] = useState(null);\n  const [optStatus, setOptStatus] = useState(false);\n\n  function passData(val) {\n    setTasks(val);\n  }\n\n  const deleteItem = (id, task_del) => {\n    const updatedItems = items.filter((elm, ind) => {\n      return ind !== id;\n    }); //deleteTask(task_del);\n\n    setItems(updatedItems);\n  };\n\n  const addItem = () => {\n    if (!task) {} else if (task && !toggleBtn) {\n      setItems(items.map(elem => {\n        if (elem.id === isEditItem) {\n          setToggleBtn(true);\n          setTasks(\" \");\n          return { ...elem,\n            text: task\n          };\n        }\n\n        return elem;\n      }));\n    } else {\n      setItems([{\n        id: Date.now(),\n        text: task,\n        status: false\n      }, ...items]);\n      setTasks(\"\");\n    }\n  };\n\n  const editItem = id => {\n    let newEditItem = items.find(elem => {\n      alert(\"elem=\" + elem.id);\n      alert(\"id=\" + id);\n      return elem.id === id;\n    });\n    setToggleBtn(false);\n    setTasks(newEditItem.text);\n    setIsEditItem(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(react.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"parent_div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"secondcontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"heading\",\n            children: \" ToDo App\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 27\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 68\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"thirdcontainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              class: \"todonametxt\",\n              value: task,\n              autoComplete: \"off\",\n              maxLength: \"20\",\n              onChange: e => passData(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 27\n            }, this), \"\\xA0\\xA0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"imgbutton\",\n            children: toggleBtn ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addItem,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                class: \"plusimage\",\n                title: \"delete\",\n                src: \"/image/plus.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 67\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addItem,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                class: \"plusimage\",\n                title: \"edit\",\n                src: \"https://img.icons8.com/color/48/000000/edit-property.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 169\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 143\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 27\n          }, this), items.map((elm, ind) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"hhh\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"taskname\",\n                value: elm.status,\n                checked: optStatus,\n                class: \"optionbtn\",\n                name: \"option\",\n                onChange: e => {\n                  setItems(items.filter(obj2 => {\n                    if (obj2.id === elm.id) {\n                      {\n                        setOptStatus(e.target.checked);\n                        alert(\"obj2.id=\" + obj2.id);\n                        alert(\"elm.id=\" + elm.id);\n                        alert(\"obj2=\" + obj2.status);\n                        return obj2; //  updateTaskStatus(obj2.text,obj2.status)\n                      }\n                    }\n                  }));\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                name: \"text\",\n                children: elm.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                title: \"edit item\",\n                class: \"editimg\",\n                src: \"https://img.icons8.com/color/48/000000/edit-property.png\",\n                onClick: () => editItem(elm.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fa fa-trash\",\n                title: \"delete Item\",\n                onClick: () => deleteItem(ind, elm.text)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 10\n              }, this)]\n            }, ind, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Tasklist, \"gf+pPVl9d2WGburUQ9T6r3wTMgk=\");\n\n_c = Tasklist;\nexport default Tasklist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasklist\");","map":{"version":3,"sources":["/home/sonia/projects/AdvancedToDo/client/src/components/TaskList.js"],"names":["react","React","useState","Tasklist","task","setTasks","items","setItems","toggleBtn","setToggleBtn","isEditItem","setIsEditItem","optStatus","setOptStatus","passData","val","deleteItem","id","task_del","updatedItems","filter","elm","ind","addItem","map","elem","text","Date","now","status","editItem","newEditItem","find","alert","e","target","value","obj2","checked"],"mappings":"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","sourcesContent":["import react from 'react';\nimport React, { useState} from \"react\";\n\n\nconst Tasklist=()=>{\n\n    const [task,setTasks] = useState(\"\");\n    const [items,setItems]=useState([]);\n    const[toggleBtn,setToggleBtn]=useState(true);\n    const[isEditItem,setIsEditItem]=useState(null);\n    const[optStatus,setOptStatus]=useState(false)\n\n  function passData(val)\n  {\n  setTasks(val)\n\n  }\n\n\n  const deleteItem=(id,task_del)=>{\n    const updatedItems=items.filter((elm,ind)=>{\n        \n        return ind!==id;\n       \n                     } ) ;\n             //deleteTask(task_del);\n             setItems(updatedItems);\n\n        } \n\n  const addItem=()=>{\n    if(!task){\n    }else if(task && !toggleBtn){\n\n      setItems(\n        items.map((elem)=>{\n          if(elem.id===isEditItem){\n            setToggleBtn(true)\n            setTasks(\" \")\n            return{...elem,text:task}\n            \n          }\n          return elem;\n        })\n      \n      )\n    } else{\n    setItems([{id:Date.now(),text:task,status:false},...items]);\n\n    setTasks(\"\")\n   \n }\n }\nconst editItem=(id)=>{\n  \n  let newEditItem=items.find((elem)=>{\n    alert(\"elem=\"+elem.id)\n    alert(\"id=\"+id)\nreturn elem.id===id\n\n  });\n  setToggleBtn(false);\nsetTasks(newEditItem.text)\nsetIsEditItem(id)\n\n\n}\n\n\n\n    return(\n\n        <react.Fragment>\n          \n          <div class=\"parent_div\">\n                   <div class=\"container\">\n                \n                     \n                          <div class=\"secondcontainer\">\n                          <label class=\"heading\"> ToDo App</label> <br></br> \n                          \n                        <span class=\"thirdcontainer\">\n                          <input type=\"text\" class=\"todonametxt\" value={task}autoComplete=\"off\" maxLength=\"20\" onChange={(e)=>passData(e.target.value)}></input>&nbsp;&nbsp;\n                          </span>\n                          <span class=\"imgbutton\">\n                            {\n\n                              toggleBtn?<button onClick={addItem}><img class=\"plusimage\" title=\"delete\" src=\"/image/plus.png\"></img></button>:<button onClick={addItem}><img class=\"plusimage\" title=\"edit\" src=\"https://img.icons8.com/color/48/000000/edit-property.png\"></img></button>\n                            }\n                            </span>\n                      \n                          { \n    \n    items.map((elm,ind)=>{\n       \n        return(\n          \n                <div class=\"hhh\" key={ind}>\n\n                <input type=\"radio\"  name=\"taskname\"     value={elm.status} checked={optStatus} class=\"optionbtn\" name=\"option\"onChange={(e)=>{\n                 \n                 setItems(items.filter(obj2=>{\n\n\n                  if(obj2.id===elm.id){\n          {\n                      setOptStatus(e.target.checked)\n\n alert(\"obj2.id=\"+obj2.id)\n alert(\"elm.id=\"+elm.id)\n                 \n               alert(\"obj2=\"+obj2.status)\n                \n               return obj2\n              //  updateTaskStatus(obj2.text,obj2.status)\n          }\n                         \n                  }\n                  \n                 \n                 })\n                 )}\n                 }/>\n                            \n                \n \n         <label name=\"text\">{elm.text}</label>\n         <img title=\"edit item\" class=\"editimg\" src=\"https://img.icons8.com/color/48/000000/edit-property.png\" onClick={()=>editItem(elm.id)}/>\n         <i class=\"fa fa-trash\" title=\"delete Item\" onClick={()=>deleteItem(ind,elm.text)}></i>\n\n          \n              </div>\n            \n            \n             ) \n            \n            }\n            \n            \n            \n\n                \n            )\n                       \n}\n\n\n\n\n                      \n                          </div>\n          \n                   </div>\n                      \n          \n           </div>\n          \n          \n          </react.Fragment>\n          \n            \n          \n          )\n\n}\nexport default Tasklist;"]},"metadata":{},"sourceType":"module"}