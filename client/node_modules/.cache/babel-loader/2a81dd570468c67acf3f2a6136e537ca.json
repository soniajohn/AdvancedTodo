{"ast":null,"code":"var _jsxFileName = \"/home/sonia/projects/AdvancedToDo/client/src/components/TaskList.js\",\n    _s = $RefreshSig$();\n\nimport react from 'react';\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useContext } from 'react';\nimport Axios from 'axios';\nimport { ListContext } from '../context/ListContext.js';\nimport { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tasklist = () => {\n  _s();\n\n  const {\n    optionname,\n    setOptionname\n  } = useContext(ListContext);\n  const [task, setTasks] = useState(\"\");\n  const [items, setItems] = useState([]);\n  const [toggleBtn, setToggleBtn] = useState(true);\n  const [isEditItem, setIsEditItem] = useState(null);\n  const [optStatus, setOptStatus] = useState(false);\n  const [taskValue, setTaskvalue] = useState(\"\");\n  const [validatevalue, setValidatevalue] = useState(\"\");\n  let history = useHistory();\n\n  function passData(val) {\n    if (val.length > 0) {\n      var name = val[0].toUpperCase() + val.slice(1);\n    }\n\n    setTasks(name);\n    return val.length < 15 ? '' : setValidatevalue(\"max char 15\");\n  }\n\n  const submitTask = () => {\n    if (task) {\n      alert(task);\n      alert(\"hi hi\");\n      Axios.post(\"http://localhost:4000/\", {\n        task: task\n      }).then(() => {\n        alert(\"successful insert\");\n      });\n      addItem();\n    } else {\n      setTaskvalue(\"please fill the field\");\n      inputRef.current.focus();\n    }\n  };\n\n  const inputRef = useRef();\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const deleteItem = (id, task_del) => {\n    const updatedItems = items.filter((elm, ind) => {\n      return ind !== id;\n    });\n    deleteTask(task_del);\n    setItems(updatedItems);\n  };\n\n  const updateTask = (tasname, txt) => {\n    Axios.put(\"http://localhost:4000/edit\", {\n      tasname: tasname,\n      original_txt: txt\n    }).then(response => {\n      alert(\"update\");\n    });\n  };\n\n  const updateTaskStatus = (txt, status) => {\n    Axios.put(\"http://localhost:4000/Update\", {\n      status: status,\n      txtupdate: txt\n    }).then(response => {//alert(\"update\");\n    });\n  };\n\n  const deleteTask = task_del => {\n    Axios.delete(`http://localhost:4000/delete/${task_del}`);\n  };\n\n  const addItem = () => {\n    if (!task) {} else if (task && !toggleBtn) {\n      setItems(items.map(elem => {\n        if (elem.id === isEditItem) {\n          setToggleBtn(true);\n          setTasks(\" \");\n          updateTask(task, elem.text);\n          return { ...elem,\n            text: task\n          };\n        }\n\n        return elem;\n      }));\n    } else {\n      setItems([{\n        id: Date.now(),\n        text: task,\n        status: false\n      }, ...items]);\n      setTasks(\"\");\n      setValidatevalue(\"\");\n    }\n  };\n\n  const editItem = id => {\n    let newEditItem = items.find(elem => {\n      return elem.id === id;\n    });\n    setToggleBtn(false);\n    setTasks(newEditItem.text);\n    setIsEditItem(id);\n  };\n\n  const redirectTask = () => {\n    history.push(\"/childlist\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(react.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"parent_div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"secondcontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"heading\",\n            children: \" ToDo App\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 27\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 68\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"thirdcontainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              ref: inputRef,\n              class: \"todonametxt\",\n              title: validatevalue,\n              value: task,\n              autoComplete: \"off\",\n              maxLength: \"20\",\n              onChange: e => passData(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 27\n            }, this), \"\\xA0\\xA0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"imgbutton\",\n            children: toggleBtn ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: submitTask,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                class: \"plusimage\",\n                src: \"/image/plus.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 70\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addItem,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                class: \"plusimage\",\n                title: \"edit\",\n                src: \"https://img.icons8.com/color/48/000000/edit-property.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 158\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 132\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 27\n          }, this), items.map((elm, ind) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"hhh\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"taskname\",\n                onChange: e => {\n                  setItems(items.filter(obj2 => {\n                    if (obj2.id === elm.id) {\n                      obj2.status = e.target.checked;\n                      setOptionname(elm.text);\n                      updateTaskStatus(obj2.text, obj2.status);\n                    }\n\n                    return obj2;\n                  }));\n                },\n                value: elm.text,\n                checked: elm.status,\n                class: \"optionbtn\",\n                name: \"option\",\n                onClick: redirectTask\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                name: \"text\",\n                children: elm.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                title: \"edit item\",\n                class: \"editimg\",\n                src: \"https://img.icons8.com/color/48/000000/edit-property.png\",\n                onClick: () => editItem(elm.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fa fa-trash\",\n                title: \"delete Item\",\n                onClick: () => deleteItem(ind, elm.text)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 10\n              }, this)]\n            }, ind, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Tasklist, \"S/8LtgRP/WxA0i/K1nlOpQmwfVM=\", false, function () {\n  return [useHistory];\n});\n\n_c = Tasklist;\nexport default Tasklist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasklist\");","map":{"version":3,"sources":["/home/sonia/projects/AdvancedToDo/client/src/components/TaskList.js"],"names":["react","React","useState","useHistory","useContext","Axios","ListContext","useRef","useEffect","Tasklist","optionname","setOptionname","task","setTasks","items","setItems","toggleBtn","setToggleBtn","isEditItem","setIsEditItem","optStatus","setOptStatus","taskValue","setTaskvalue","validatevalue","setValidatevalue","history","passData","val","length","name","toUpperCase","slice","submitTask","alert","post","then","addItem","inputRef","current","focus","deleteItem","id","task_del","updatedItems","filter","elm","ind","deleteTask","updateTask","tasname","txt","put","original_txt","response","updateTaskStatus","status","txtupdate","delete","map","elem","text","Date","now","editItem","newEditItem","find","redirectTask","push","e","target","value","obj2","checked"],"mappings":"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","sourcesContent":["import react from 'react';\nimport React, { useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport{useContext} from 'react';\nimport Axios from 'axios';\nimport {ListContext} from '../context/ListContext.js'\nimport  { useRef, useEffect } from 'react';\n\n\nconst Tasklist=()=>{\n\n    const{optionname,setOptionname}=useContext(ListContext)\n    const [task,setTasks] = useState(\"\");\n    const [items,setItems]=useState([]);\n    const[toggleBtn,setToggleBtn]=useState(true);\n    const[isEditItem,setIsEditItem]=useState(null);\n    const[optStatus,setOptStatus]=useState(false);\n    const[taskValue,setTaskvalue]=useState(\"\")\n    const[validatevalue,setValidatevalue]=useState(\"\")\n    let history=useHistory();\n\n   \n  function passData(val)\n    \n      {\n        if(val.length>0)\n        {\n     var name= val[0].toUpperCase()+val.slice(1)\n      \n        }\n  \n      setTasks(name);\n  \n      return val.length<15 ?'':setValidatevalue(\"max char 15\");\n         \n      }\n\n\n\n  const submitTask=()=>{\n        \n      if(task){\n        alert(task)\n        alert(\"hi hi\")\n        Axios.post(\"http://localhost:4000/\",{\n        \n        task:task,\n             \n        }).then(()=>{\n          alert(\"successful insert\")});\n          addItem();\n        \n                    }\n       else{\n       setTaskvalue(\"please fill the field\");\n       inputRef.current.focus();\n            }\n                       };  \n  \n\n\n    const inputRef = useRef();\n      useEffect(() => {\n       inputRef.current.focus();\n\n                       })\n\n\n\n\n    const deleteItem=(id,task_del)=>{\n    const updatedItems=items.filter((elm,ind)=>{\n        \n           return ind!==id;\n       \n                      } ) ;\n             deleteTask(task_del);\n             setItems(updatedItems);\n\n          } \n\n          const updateTask=(tasname,txt)=>{\n          \n           \n        \n        Axios.put(\"http://localhost:4000/edit\",\n             {\n              tasname:tasname,original_txt:txt\n            \n              }).then((response)=>\n          \n             { alert(\"update\");\n        \n              }\n            \n              );\n          \n          \n              }\n\n\n\n        const updateTaskStatus=(txt,status)=>{\n          \n                   \n        Axios.put(\"http://localhost:4000/Update\",\n           { status:status,txtupdate:txt}).then((response)=>\n          \n           { \n             //alert(\"update\");\n        \n           }\n            \n           );\n          \n          \n          }\n        \n        \n\n\n        const deleteTask=(task_del)=>{\n\n          Axios.delete(`http://localhost:4000/delete/${task_del}`);\n      \n                                     };\n \n\n    const addItem=()=>{\n         if(!task){\n                  }else if(task && !toggleBtn){\n\n                  setItems(\n                  items.map((elem)=>{\n                              if(elem.id===isEditItem){\n                              setToggleBtn(true)\n          \n                              setTasks(\" \")\n                               updateTask(task,elem.text)\n                               return{...elem,text:task}\n            \n                                     }\n                  return elem;\n                  })\n      \n                           )\n                     } else{\n                         setItems([{id:Date.now(),text:task,status:false},...items]);\n\n                          setTasks(\"\");\n                          setValidatevalue(\"\");\n   \n                            }\n                      }\n\n\n\n\n      const editItem=(id)=>{\n  \n        let newEditItem=items.find((elem)=>{\n        \n        return elem.id===id\n\n                          });\n         setToggleBtn(false);\n          setTasks(newEditItem.text)\n          setIsEditItem(id)\n\n\n          }\n\n\n        const redirectTask=()=>{\n\n  \n\n        history.push(\"/childlist\");\n\n                 \n\n          }\n\n\n    return(\n\n        <react.Fragment>\n          \n          <div class=\"parent_div\">\n                   <div class=\"container\">\n                \n                     \n                          <div class=\"secondcontainer\">\n                          <label class=\"heading\"> ToDo App</label> <br></br> \n                          \n                        <span class=\"thirdcontainer\">\n                          <input type=\"text\"  ref={inputRef} class=\"todonametxt\" title={validatevalue} value={task}autoComplete=\"off\" maxLength=\"20\" onChange={(e)=>passData(e.target.value)}></input>&nbsp;&nbsp;\n                          </span>\n                          \n                          <span class=\"imgbutton\">\n                            {\n\n                              toggleBtn?<button onClick={submitTask}><img class=\"plusimage\"  src=\"/image/plus.png\"></img></button>:<button onClick={addItem}><img class=\"plusimage\" title=\"edit\" src=\"https://img.icons8.com/color/48/000000/edit-property.png\"></img></button>\n                            }\n                            </span>\n                           \n                      \n                          { \n    \n    items.map((elm,ind)=>{\n  \n        return(\n          \n         \n                <div class=\"hhh\" key={ind}>\n\n                <input type=\"radio\"  name=\"taskname\"    onChange={(e)=>{\n                \n                 setItems(items.filter(obj2=>{\n                  \n\n                  if(obj2.id===elm.id){\n          \n                   obj2.status=e.target.checked\n\n                  setOptionname(elm.text);\n  \n              \n            \n               \n               updateTaskStatus(obj2.text,obj2.status)\n          \n                         \n                  }\n                  return obj2\n               \n                 \n                 })\n                 )}\n               \n                 } value={elm.text} checked={elm.status} class=\"optionbtn\" name=\"option\" onClick= {redirectTask} \n                \n                 />\n                 \n                            \n                \n \n         <label name=\"text\">{elm.text}</label>\n         <img title=\"edit item\" class=\"editimg\" src=\"https://img.icons8.com/color/48/000000/edit-property.png\" onClick={()=>editItem(elm.id)}/>\n         <i class=\"fa fa-trash\" title=\"delete Item\" onClick={()=>deleteItem(ind,elm.text)}></i>\n\n          \n              </div>\n            \n            \n             ) \n            \n            }\n            \n            \n            \n\n                \n            )\n                       \n}\n\n\n\n\n                      \n                          </div>\n          \n                   </div>\n                      \n          \n           </div>\n          \n          \n          </react.Fragment>\n          \n            \n          \n          )\n\n}\nexport default Tasklist;"]},"metadata":{},"sourceType":"module"}