{"ast":null,"code":"var _jsxFileName = \"/home/sonia/projects/AdvancedTodo/client/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport react, { useRef, useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport Tasklist from './TaskList';\nimport { useHistory } from \"react-router-dom\";\nimport { ListContext } from '../context/ListContext.js';\nimport { useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const {\n    username,\n    SetUsername,\n    userid,\n    SetUserid\n  } = useContext(ListContext);\n  const [loginstatus, SetLoginstatus] = useState(\"\");\n  const [textstatus, Settextstatus] = useState(\"\");\n  let history = useHistory();\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  let name, value, bool;\n\n  const handleInputs = e => {\n    name = e.target.name;\n    value = e.target.value;\n\n    if (name === \"email\") {\n      const emailRegex = /\\S+@\\S+\\.\\S+/;\n\n      if (emailRegex.test(value)) {\n        Settextstatus(\"\");\n      } else {\n        Settextstatus(\"not valid email\");\n      }\n    }\n\n    setUser({ ...user,\n      [name]: value\n    });\n  };\n\n  const loginData = () => {\n    const {\n      email,\n      password\n    } = user;\n\n    if (user) {\n      Axios.post(`http://localhost:4000/users/todolists`, {\n        email,\n        password\n      }).then(response => {\n        if (response.data.message) {\n          Settextstatus(\"\");\n          SetLoginstatus(response.data.message);\n        } else if (response.data[0].email) {\n          var user = response.data[0].f_name;\n          var userid = response.data[0].user_id;\n          SetUsername(user);\n          SetUserid(userid);\n          history.push('/users/:user/todolists');\n        }\n      });\n    }\n  };\n\n  const cancelData = () => {\n    setUser({\n      email: \" \",\n      password: \" \"\n    });\n    SetLoginstatus(\" \");\n    Settextstatus(\" \");\n  };\n\n  return /*#__PURE__*/_jsxDEV(react.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"parent_div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"secondcontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            class: \"todoimg\",\n            src: \"/image/todoicon.jpeg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"heading\",\n            children: \"ToDo App\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 31\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 71\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 81\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"todolbl\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 50\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"todolbl2\",\n            children: \"Login with E-mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 63\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"thirdcontainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"email\",\n              class: \"todonametxt\",\n              value: user.email,\n              autoComplete: \"off\",\n              maxLength: \"20\",\n              onChange: handleInputs\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), \"\\xA0\\xA0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: textstatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"todolbl\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 53\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"thirdcontainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              class: \"todopasstxt\",\n              value: user.password,\n              autoComplete: \"off\",\n              maxLength: \"20\",\n              onChange: handleInputs\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), \"\\xA0\\xA0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: loginstatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"btnclass\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"todobtn\",\n              onClick: loginData,\n              children: \"SignIn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"todobtn\",\n              onClick: cancelData,\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 86\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/users\",\n              class: \"signup\",\n              children: \"SignUp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"SDI8W12dOrytJgg2N4eFfywp8CM=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/sonia/projects/AdvancedTodo/client/src/components/Login.js"],"names":["react","useRef","useState","useEffect","Axios","Redirect","Tasklist","useHistory","ListContext","useContext","Login","username","SetUsername","userid","SetUserid","loginstatus","SetLoginstatus","textstatus","Settextstatus","history","user","setUser","email","password","name","value","bool","handleInputs","e","target","emailRegex","test","loginData","post","then","response","data","message","f_name","user_id","push","cancelData"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,UAAT,QAA2B,OAA3B;;;AAMA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAElB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,WAAZ;AAAyBC,IAAAA,MAAzB;AAAiCC,IAAAA;AAAjC,MAA+CL,UAAU,CAACD,WAAD,CAA/D;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,EAAD,CAA5C;AAEA,MAAIiB,OAAO,GAAGZ,UAAU,EAAxB;AAEA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC;AAE/BoB,IAAAA,KAAK,EAAE,EAFwB;AAEpBC,IAAAA,QAAQ,EAAE;AAFU,GAAD,CAAhC;AAOA,MAAIC,IAAJ,EAAUC,KAAV,EAAiBC,IAAjB;;AACA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAE1BJ,IAAAA,IAAI,GAAGI,CAAC,CAACC,MAAF,CAASL,IAAhB;AAEAC,IAAAA,KAAK,GAAGG,CAAC,CAACC,MAAF,CAASJ,KAAjB;;AACA,QAAID,IAAI,KAAK,OAAb,EAAsB;AACpB,YAAMM,UAAU,GAAG,cAAnB;;AACA,UAAIA,UAAU,CAACC,IAAX,CAAgBN,KAAhB,CAAJ,EAA4B;AAC1BP,QAAAA,aAAa,CAAC,EAAD,CAAb;AAGD,OAJD,MAIO;AACLA,QAAAA,aAAa,CAAC,iBAAD,CAAb;AAED;AAEF;;AAEDG,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAW,OAACI,IAAD,GAAQC;AAAnB,KAAD,CAAP;AAED,GApBD;;AAsBA,QAAMO,SAAS,GAAG,MAAM;AACtB,UAAM;AAAEV,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsBH,IAA5B;;AAEA,QAAIA,IAAJ,EAAU;AAGRhB,MAAAA,KAAK,CAAC6B,IAAN,CAAY,uCAAZ,EAAoD;AAElDX,QAAAA,KAFkD;AAE3CC,QAAAA;AAF2C,OAApD,EAIGW,IAJH,CAISC,QAAD,IAAc;AAEpB,YAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAlB,EAA2B;AACzBnB,UAAAA,aAAa,CAAC,EAAD,CAAb;AACAF,UAAAA,cAAc,CAACmB,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAd;AAED,SAJD,MASE,IAAIF,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBd,KAArB,EAA4B;AAC1B,cAAIF,IAAI,GAAGe,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBE,MAA5B;AAEA,cAAIzB,MAAM,GAAGsB,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBG,OAA9B;AAGA3B,UAAAA,WAAW,CAACQ,IAAD,CAAX;AACAN,UAAAA,SAAS,CAACD,MAAD,CAAT;AAEAM,UAAAA,OAAO,CAACqB,IAAR,CAAa,wBAAb;AACD;AAEJ,OA3BD;AA6BD;AAGF,GAtCD;;AA+CA,QAAMC,UAAU,GAAG,MAAM;AACvBpB,IAAAA,OAAO,CAAC;AAAEC,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,QAAQ,EAAE;AAAxB,KAAD,CAAP;AACAP,IAAAA,cAAc,CAAC,GAAD,CAAd;AACAE,IAAAA,aAAa,CAAC,GAAD,CAAb;AAED,GALD;;AAQA,sBAEE,QAAC,KAAD,CAAO,QAAP;AAAA,2BAEE;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA,6BACE;AAAK,QAAA,KAAK,EAAC,WAAX;AAAA,+BAGE;AAAK,UAAA,KAAK,EAAC,iBAAX;AAAA,kCACE;AAAK,YAAA,KAAK,EAAC,SAAX;AAAqB,YAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,kBADF,+BAEoB;AAAO,YAAA,KAAK,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFpB,oBAE4D;AAAA;AAAA;AAAA;AAAA,kBAF5D,oBAEsE;AAAA;AAAA;AAAA;AAAA,kBAFtE,eAGE;AAAO,YAAA,KAAK,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAGuC;AAAA;AAAA;AAAA;AAAA,kBAHvC,eAIE;AAAO,YAAA,KAAK,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAIoD;AAAA;AAAA;AAAA;AAAA,kBAJpD,eAKE;AAAM,YAAA,KAAK,EAAC,gBAAZ;AAAA,oCACE;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,IAAI,EAAC,OAAxB;AAAgC,cAAA,KAAK,EAAC,aAAtC;AAAoD,cAAA,KAAK,EAAEE,IAAI,CAACE,KAAhE;AAAuE,cAAA,YAAY,EAAC,KAApF;AAA0F,cAAA,SAAS,EAAC,IAApG;AAAyG,cAAA,QAAQ,EAAEK;AAAnH;AAAA;AAAA;AAAA;AAAA,oBADF;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAOS;AAAA;AAAA;AAAA;AAAA,kBAPT,eAQE;AAAA,sBAAIV;AAAJ;AAAA;AAAA;AAAA;AAAA,kBARF,eASE;AAAO,YAAA,KAAK,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,eAS0C;AAAA;AAAA;AAAA;AAAA,kBAT1C,eAWE;AAAM,YAAA,KAAK,EAAC,gBAAZ;AAAA,oCACE;AAAO,cAAA,IAAI,EAAC,UAAZ;AAAuB,cAAA,IAAI,EAAC,UAA5B;AAAuC,cAAA,KAAK,EAAC,aAA7C;AAA2D,cAAA,KAAK,EAAEG,IAAI,CAACG,QAAvE;AAAiF,cAAA,YAAY,EAAC,KAA9F;AAAoG,cAAA,SAAS,EAAC,IAA9G;AAAmH,cAAA,QAAQ,EAAEI;AAA7H;AAAA;AAAA;AAAA;AAAA,oBADF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF,eAcE;AAAA,sBAAIZ;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAdF,eAeE;AAAK,YAAA,KAAK,EAAC,UAAX;AAAA,oCACE;AAAQ,cAAA,KAAK,EAAC,SAAd;AAAwB,cAAA,OAAO,EAAEiB,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,2BACyE;AAAQ,cAAA,KAAK,EAAC,SAAd;AAAwB,cAAA,OAAO,EAAES,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADzE,eAEE;AAAG,cAAA,IAAI,EAAC,QAAR;AAAiB,cAAA,KAAK,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UAFF;AA+CD,CA5ID;;GAAM/B,K;UAMUH,U;;;KANVG,K;AA6IN,eAAeA,KAAf","sourcesContent":["import react, { useRef, useState, useEffect } from 'react';\n\nimport Axios from 'axios';\nimport { Redirect } from 'react-router-dom';\n\nimport Tasklist from './TaskList';\nimport { useHistory } from \"react-router-dom\";\nimport { ListContext } from '../context/ListContext.js'\nimport { useContext } from 'react';\n\n\n\n\n\nconst Login = () => {\n\n  const { username, SetUsername, userid, SetUserid } = useContext(ListContext);\n  const [loginstatus, SetLoginstatus] = useState(\"\")\n  const [textstatus, Settextstatus] = useState(\"\")\n\n  let history = useHistory();\n\n  const [user, setUser] = useState({\n\n    email: \"\", password: \"\"\n\n  });\n\n\n  let name, value, bool;\n  const handleInputs = (e) => {\n\n    name = e.target.name;\n    \n    value = e.target.value;\n    if (name === \"email\") {\n      const emailRegex = /\\S+@\\S+\\.\\S+/;\n      if (emailRegex.test(value)) {\n        Settextstatus(\"\")\n\n\n      } else {\n        Settextstatus(\"not valid email\");\n\n      }\n\n    }\n\n    setUser({ ...user, [name]: value });\n\n  }\n\n  const loginData = () => {\n    const { email, password } = user;\n\n    if (user) {\n\n      \n      Axios.post(`http://localhost:4000/users/todolists`, {\n\n        email, password\n\n      }).then((response) => {\n\n        if (response.data.message) {\n          Settextstatus(\"\")\n          SetLoginstatus(response.data.message)\n          \n        }\n\n\n        else\n\n          if (response.data[0].email) {\n            var user = response.data[0].f_name\n            \n            var userid = response.data[0].user_id\n          \n\n            SetUsername(user);\n            SetUserid(userid)\n\n            history.push('/users/:user/todolists')\n          }\n\n      });\n\n    }\n    \n\n  };\n\n\n\n\n\n\n\n\n  const cancelData = () => {\n    setUser({ email: \" \", password: \" \" })\n    SetLoginstatus(\" \")\n    Settextstatus(\" \")\n\n  }\n\n\n  return (\n\n    <react.Fragment>\n\n      <div class=\"parent_div\">\n        <div class=\"container\">\n\n\n          <div class=\"secondcontainer\">\n            <img class=\"todoimg\" src=\"/image/todoicon.jpeg\"></img>\n            &nbsp;&nbsp;&nbsp;<label class=\"heading\">ToDo App</label> <br></br> <br></br>\n            <label class=\"todolbl\" >Login</label><br></br>\n            <label class=\"todolbl2\" >Login with E-mail</label><br></br>\n            <span class=\"thirdcontainer\">\n              <input type=\"text\" name=\"email\" class=\"todonametxt\" value={user.email} autoComplete=\"off\" maxLength=\"20\" onChange={handleInputs} ></input>&nbsp;&nbsp;\n            </span><br></br>\n            <p>{textstatus}</p>\n            <label class=\"todolbl\" >Password</label><br></br>\n\n            <span class=\"thirdcontainer\">\n              <input type=\"password\" name=\"password\" class=\"todopasstxt\" value={user.password} autoComplete=\"off\" maxLength=\"20\" onChange={handleInputs} ></input>&nbsp;&nbsp;\n            </span>\n            <p>{loginstatus}</p>\n            <div class=\"btnclass\">\n              <button class=\"todobtn\" onClick={loginData}>SignIn</button>&nbsp;&nbsp;<button class=\"todobtn\" onClick={cancelData}>Reset</button>\n              <a href=\"/users\" class=\"signup\">SignUp</a></div>\n\n\n\n\n          </div>\n\n\n        </div>\n\n\n\n      </div>\n\n\n\n    </react.Fragment>\n\n\n\n  )\n\n}\nexport default Login;\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}