{"ast":null,"code":"var _jsxFileName = \"/home/sonia/projects/AdvancedTodo/client/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport react, { useRef, useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport Tasklist from './TaskList';\nimport { useHistory } from \"react-router-dom\";\nimport { ListContext } from '../context/ListContext.js';\nimport { useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const {\n    username,\n    SetUsername,\n    userid,\n    SetUserid\n  } = useContext(ListContext);\n  const [loginstatus, SetLoginstatus] = useState(\"\");\n  const [textstatus, Settextstatus] = useState(\"\");\n  let history = useHistory();\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  let name, value, bool;\n\n  const handleInputs = e => {\n    name = e.target.name; // alert(\"name=\"+name)\n\n    value = e.target.value;\n\n    if (name === \"email\") {\n      const emailRegex = /\\S+@\\S+\\.\\S+/;\n\n      if (emailRegex.test(value)) {\n        Settextstatus(\"\");\n      } else {\n        Settextstatus(\"not valid email\");\n      }\n    }\n\n    setUser({ ...user,\n      [name]: value\n    });\n  };\n\n  const loginData = () => {\n    const {\n      email,\n      password\n    } = user;\n\n    if (user) {\n      Axios.post(\"http://localhost:4000/logininsert\", {\n        email,\n        password\n      }).then(response => {\n        if (response.data.message) {\n          Settextstatus(\"\");\n          SetLoginstatus(response.data.message); //  alert(response.data.message)\n        } else if (response.data[0].email) {\n          var user = response.data[0].f_name; // alert(\"user=\"+user)\n\n          var userid = response.data[0].user_id; // alert(\"userid=\"+userid)\n\n          SetUsername(user);\n          SetUserid(userid);\n          history.push('/taskinsert');\n        }\n      });\n    } // cancelData();   \n\n  };\n\n  const cancelData = () => {\n    setUser({\n      email: \" \",\n      password: \" \"\n    });\n    SetLoginstatus(\" \");\n    Settextstatus(\" \");\n  };\n\n  return /*#__PURE__*/_jsxDEV(react.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"parent_div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"secondcontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            class: \"todoimg\",\n            src: \"/image/todoicon.jpeg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 27\n          }, this), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"heading\",\n            children: \"ToDo App\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 45\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 85\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 95\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"todolbl\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 64\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"todolbl2\",\n            children: \"Login with E-mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 77\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"thirdcontainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"email\",\n              class: \"todonametxt\",\n              value: user.email,\n              autoComplete: \"nope\",\n              maxLength: \"20\",\n              onChange: handleInputs\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 27\n            }, this), \"\\xA0\\xA0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: textstatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"todolbl\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 67\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"thirdcontainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              class: \"todopasstxt\",\n              value: user.password,\n              autoComplete: \"nope\",\n              maxLength: \"20\",\n              onChange: handleInputs\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 27\n            }, this), \"\\xA0\\xA0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: loginstatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"btnclass\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"todobtn\",\n              onClick: loginData,\n              children: \"SignIn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 27\n            }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"todobtn\",\n              onClick: cancelData,\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 99\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/signupinsert\",\n              class: \"signup\",\n              children: \"SignUp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"a2+hIwd9QLDrAwmZjmhWFPFCIi4=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/sonia/projects/AdvancedTodo/client/src/components/Login.js"],"names":["react","useRef","useState","useEffect","Axios","Redirect","Tasklist","useHistory","ListContext","useContext","Login","username","SetUsername","userid","SetUserid","loginstatus","SetLoginstatus","textstatus","Settextstatus","history","user","setUser","email","password","name","value","bool","handleInputs","e","target","emailRegex","test","loginData","post","then","response","data","message","f_name","user_id","push","cancelData"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAuBC,QAAvB,EAAiCC,SAAjC,QAAiD,OAAjD;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,WAAR,QAA0B,2BAA1B;AACA,SAAOC,UAAP,QAAwB,OAAxB;;;AAYA,MAAMC,KAAK,GAAC,MAAI;AAAA;;AAEd,QAAK;AAACC,IAAAA,QAAD;AAAUC,IAAAA,WAAV;AAAsBC,IAAAA,MAAtB;AAA6BC,IAAAA;AAA7B,MAAwCL,UAAU,CAACD,WAAD,CAAvD;AACA,QAAM,CAACO,WAAD,EAAaC,cAAb,IAA6Bd,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAACe,UAAD,EAAYC,aAAZ,IAA2BhB,QAAQ,CAAC,EAAD,CAAzC;AAEA,MAAIiB,OAAO,GAACZ,UAAU,EAAtB;AAEA,QAAM,CAACa,IAAD,EAAMC,OAAN,IAAiBnB,QAAQ,CAAC;AAE9BoB,IAAAA,KAAK,EAAC,EAFwB;AAErBC,IAAAA,QAAQ,EAAC;AAFY,GAAD,CAA/B;AAMI,MAAIC,IAAJ,EAASC,KAAT,EAAeC,IAAf;;AACA,QAAMC,YAAY,GAAEC,CAAD,IAAK;AAEtBJ,IAAAA,IAAI,GAACI,CAAC,CAACC,MAAF,CAASL,IAAd,CAFsB,CAGvB;;AACCC,IAAAA,KAAK,GAACG,CAAC,CAACC,MAAF,CAASJ,KAAf;;AACA,QAAGD,IAAI,KAAG,OAAV,EAAkB;AAChB,YAAMM,UAAU,GAAG,cAAnB;;AACF,UAAIA,UAAU,CAACC,IAAX,CAAgBN,KAAhB,CAAJ,EAA4B;AAC1BP,QAAAA,aAAa,CAAC,EAAD,CAAb;AAGD,OAJD,MAIM;AACJA,QAAAA,aAAa,CAAC,iBAAD,CAAb;AAED;AAEF;;AAECG,IAAAA,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAS,OAACI,IAAD,GAAOC;AAAhB,KAAD,CAAP;AAED,GApBD;;AAsBA,QAAMO,SAAS,GAAC,MAAI;AAClB,UAAM;AAACV,MAAAA,KAAD;AAAOC,MAAAA;AAAP,QAAiBH,IAAvB;;AAEA,QAAGA,IAAH,EAAQ;AAGNhB,MAAAA,KAAK,CAAC6B,IAAN,CAAW,mCAAX,EAA+C;AAE/CX,QAAAA,KAF+C;AAEzCC,QAAAA;AAFyC,OAA/C,EAIGW,IAJH,CAISC,QAAD,IAAY;AAEnB,YAAGA,QAAQ,CAACC,IAAT,CAAcC,OAAjB,EAAyB;AACrBnB,UAAAA,aAAa,CAAC,EAAD,CAAb;AACFF,UAAAA,cAAc,CAACmB,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAd,CAFuB,CAGzB;AACC,SAJD,MASA,IAAGF,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBd,KAApB,EACA;AACE,cAAIF,IAAI,GAACe,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBE,MAA1B,CADF,CAEC;;AACC,cAAIzB,MAAM,GAACsB,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBG,OAA5B,CAHF,CAIC;;AAED3B,UAAAA,WAAW,CAACQ,IAAD,CAAX;AACAN,UAAAA,SAAS,CAACD,MAAD,CAAT;AAEAM,UAAAA,OAAO,CAACqB,IAAR,CAAa,aAAb;AACC;AAEA,OA5BF;AA8Ba,KApCG,CAqCV;;AAEJ,GAvCN;;AAgDG,QAAMC,UAAU,GAAG,MAAM;AACzBpB,IAAAA,OAAO,CAAC;AAACC,MAAAA,KAAK,EAAC,GAAP;AAAWC,MAAAA,QAAQ,EAAC;AAApB,KAAD,CAAP;AACAP,IAAAA,cAAc,CAAC,GAAD,CAAd;AACAE,IAAAA,aAAa,CAAC,GAAD,CAAb;AAEE,GALF;;AAQL,sBAEI,QAAC,KAAD,CAAO,QAAP;AAAA,2BAEE;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA,6BACS;AAAK,QAAA,KAAK,EAAC,WAAX;AAAA,+BAGO;AAAK,UAAA,KAAK,EAAC,iBAAX;AAAA,kCACA;AAAM,YAAA,KAAK,EAAC,SAAZ;AAAsB,YAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,kBADA,+BAEkB;AAAO,YAAA,KAAK,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFlB,oBAE0D;AAAA;AAAA;AAAA;AAAA,kBAF1D,oBAEoE;AAAA;AAAA;AAAA;AAAA,kBAFpE,eAGA;AAAO,YAAA,KAAK,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHA,eAGqC;AAAA;AAAA;AAAA;AAAA,kBAHrC,eAIA;AAAO,YAAA,KAAK,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJA,eAIkD;AAAA;AAAA;AAAA;AAAA,kBAJlD,eAKF;AAAM,YAAA,KAAK,EAAC,gBAAZ;AAAA,oCACE;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAoB,cAAA,IAAI,EAAC,OAAzB;AAAiC,cAAA,KAAK,EAAC,aAAvC;AAAuD,cAAA,KAAK,EAAEE,IAAI,CAACE,KAAnE;AAA0E,cAAA,YAAY,EAAC,MAAvF;AAA8F,cAAA,SAAS,EAAC,IAAxG;AAA6G,cAAA,QAAQ,EAAEK;AAAvH;AAAA;AAAA;AAAA;AAAA,oBADF;AAAA;AAAA;AAAA;AAAA;AAAA,kBALE,eAOO;AAAA;AAAA;AAAA;AAAA,kBAPP,eAQA;AAAA,sBAAIV;AAAJ;AAAA;AAAA;AAAA;AAAA,kBARA,eASA;AAAO,YAAA,KAAK,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATA,eASwC;AAAA;AAAA;AAAA;AAAA,kBATxC,eAWF;AAAM,YAAA,KAAK,EAAC,gBAAZ;AAAA,oCACE;AAAO,cAAA,IAAI,EAAC,UAAZ;AAAuB,cAAA,IAAI,EAAC,UAA5B;AAAwC,cAAA,KAAK,EAAC,aAA9C;AAA4D,cAAA,KAAK,EAAEG,IAAI,CAACG,QAAxE;AAAkF,cAAA,YAAY,EAAC,MAA/F;AAAsG,cAAA,SAAS,EAAC,IAAhH;AAAqH,cAAA,QAAQ,EAAEI;AAA/H;AAAA;AAAA;AAAA;AAAA,oBADF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXE,eAcA;AAAA,sBAAIZ;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAdA,eAeA;AAAK,YAAA,KAAK,EAAC,UAAX;AAAA,oCACA;AAAS,cAAA,KAAK,EAAC,SAAf;AAAyB,cAAA,OAAO,EAAEiB,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,2BACwE;AAAQ,cAAA,KAAK,EAAC,SAAd;AAAwB,cAAA,OAAO,EAAES,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADxE,eAEA;AAAG,cAAA,IAAI,EAAC,eAAR;AAAwB,cAAA,KAAK,EAAC,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHP;AAAA;AAAA;AAAA;AAAA;AADT;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UAFJ;AA+CH,CA5ID;;GAAM/B,K;UAMQH,U;;;KANRG,K;AA6IN,eAAeA,KAAf","sourcesContent":["import react, { useRef,useState ,useEffect} from 'react';\n\nimport Axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport Tasklist from './TaskList';\nimport {useHistory} from \"react-router-dom\";\nimport {ListContext} from '../context/ListContext.js'\nimport{useContext} from 'react';\n\n\n\n\n\n\n\n\n\n\n\nconst Login=()=>{\n\n  const{username,SetUsername,userid,SetUserid}=useContext(ListContext);\n  const [loginstatus,SetLoginstatus]=useState(\"\")\n  const [textstatus,Settextstatus]=useState(\"\")\n  \n  let history=useHistory();\n\n  const [user,setUser] = useState({\n\n    email:\"\",password:\"\"\n    \n      });\n      \n      let name,value,bool;\n      const handleInputs=(e)=>{\n      \n        name=e.target.name;\n       // alert(\"name=\"+name)\n        value=e.target.value;\n        if(name===\"email\"){\n          const emailRegex = /\\S+@\\S+\\.\\S+/;\n        if (emailRegex.test(value)) {\n          Settextstatus(\"\")\n        \n        \n        } else{\n          Settextstatus(\"not valid email\");\n       \n        }\n        \n      }\n    \n        setUser({...user,[name]:value});\n    \n      }\n      \n      const loginData=()=>{\n        const {email,password}=user;\n          \n        if(user){\n        \n                  \n          Axios.post(\"http://localhost:4000/logininsert\",{\n          \n          email,password\n               \n          }).then((response)=>{\n          \n           if(response.data.message){\n               Settextstatus(\"\")\n             SetLoginstatus(response.data.message)\n           //  alert(response.data.message)\n           }\n          \n           \n           else\n          \n           if(response.data[0].email)\n           {\n             var user=response.data[0].f_name\n            // alert(\"user=\"+user)\n             var userid=response.data[0].user_id\n            // alert(\"userid=\"+userid)\n           \n           SetUsername(user);\n           SetUserid(userid)\n               \n           history.push('/taskinsert')\n           }\n        \n           });\n       \n                      } \n                // cancelData();   \n                    \n           };  \n\n\n     \n          \n\n\n\n    \n         const cancelData = () => { \n         setUser({email:\" \",password:\" \"})\n         SetLoginstatus(\" \")\n         Settextstatus(\" \")\n         \n          }\n       \n\n    return(\n\n        <react.Fragment>\n          \n          <div class=\"parent_div\">\n                   <div class=\"container\">\n                \n                     \n                          <div class=\"secondcontainer\">\n                          <img  class=\"todoimg\" src=\"/image/todoicon.jpeg\"></img>\n                          &nbsp;&nbsp;&nbsp;<label class=\"heading\">ToDo App</label> <br></br> <br></br>\n                          <label class=\"todolbl\" >Login</label><br></br>\n                          <label class=\"todolbl2\" >Login with E-mail</label><br></br>\n                        <span class=\"thirdcontainer\">\n                          <input type=\"text\"  name=\"email\" class=\"todonametxt\"   value={user.email} autoComplete=\"nope\" maxLength=\"20\" onChange={handleInputs} ></input>&nbsp;&nbsp;\n                          </span><br></br>\n                          <p>{textstatus}</p>\n                          <label class=\"todolbl\" >Password</label><br></br>\n                          \n                        <span class=\"thirdcontainer\">\n                          <input type=\"password\" name=\"password\"  class=\"todopasstxt\" value={user.password} autoComplete=\"nope\" maxLength=\"20\" onChange={handleInputs} ></input>&nbsp;&nbsp;\n                          </span>\n                          <p>{loginstatus}</p>\n                          <div class=\"btnclass\">\n                          <button  class=\"todobtn\" onClick={loginData}>SignIn</button>&nbsp;&nbsp;<button class=\"todobtn\" onClick={cancelData }>Reset</button>\n                          <a href=\"/signupinsert\" class=\"signup\">SignUp</a></div>\n                          \n                           \n                      \n                          \n                          </div>\n                         \n          \n                   </div>\n                   \n                     \n          \n           </div>\n           \n          \n          \n          </react.Fragment>\n          \n            \n          \n          )\n\n}\nexport default Login;\n\n\n\n\n    \n\n"]},"metadata":{},"sourceType":"module"}